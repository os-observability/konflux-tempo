FROM registry.redhat.io/ubi9/nodejs-20:latest as builder-ui

WORKDIR /opt/app-root/src
USER root

COPY jaeger-ui .
# this directory is checked by ecosystem-cert-preflight-checks task in Konflux
COPY jaeger-ui/LICENSE /licenses/

RUN npm ci --ignore-scripts
RUN npm run build

FROM brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_8_golang_1.22 as builder-jaeger-query

WORKDIR /opt/app-root/src
USER root

COPY jaeger .
# this directory is checked by ecosystem-cert-preflight-checks task in Konflux
COPY jaeger/LICENSE /licenses/

COPY --from=builder-ui /opt/app-root/src /opt/app-root/src/jaeger-ui

RUN rm -rf ./cmd/query/app/ui/actual && mkdir ./cmd/query/app/ui/actual && cp -r ./jaeger-ui/packages/jaeger-ui/build/* ./cmd/query/app/ui/actual/ && find ./cmd/query/app/ui/actual -type f | xargs gzip && \
  export VERSION_PKG="github.com/jaegertracing/jaeger/pkg/version" && \
  export VERSION_DATE=`date -u +'%Y-%m-%dT%H:%M:%SZ'` && \
  export GIT_LATEST_TAG=`git describe --abbrev=0 --tags` && echo $GIT_LATEST_TAG && \
  export GIT_COMMIT_SHA=`git rev-parse HEAD` && echo $GIT_COMMIT_SHA && \
  CGO_ENABLED=1 GOEXPERIMENT=strictfipsruntime go build -C ./cmd/query -mod=mod -tags ui,strictfipsruntime -o ./jaeger -trimpath -ldflags "-s -w -X ${VERSION_PKG}.commitSHA=${GIT_COMMIT_SHA} -X ${VERSION_PKG}.latestVersion=${GIT_LATEST_TAG} -X ${VERSION_PKG}.date=${VERSION_DATE}"


FROM brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_8_golang_1.22 as builder

WORKDIR /opt/app-root/src
USER root

COPY tempo .
# this directory is checked by ecosystem-cert-preflight-checks task in Konflux
COPY tempo/LICENSE /licenses/

RUN export GIT_BRANCH=`git rev-parse --abbrev-ref HEAD` && \
  export GIT_REVISION=`git rev-parse --short HEAD` && \
  export VERSION=`./tools/image-tag | cut -d, -f 1` &&  \
  CGO_ENABLED=1 GOEXPERIMENT=strictfipsruntime go build -C ./cmd/tempo-query -tags strictfipsruntime -buildvcs=false -mod vendor \
    -ldflags "-X main.Branch=${GIT_BRANCH} -X main.Revision=${GIT_REVISION} -X main.Version=${VERSION}" \
    -o "tempo-query" -trimpath -ldflags "-s -w"

FROM registry.redhat.io/ubi8/ubi-minimal:8.10-1052.1724178568
WORKDIR /

RUN microdnf update -y && rm -rf /var/cache/yum && \
    microdnf install openssl -y && \
    microdnf clean all

RUN mkdir /licenses
COPY tempo/LICENSE /licenses/.
COPY --from=builder-jaeger-query /opt/app-root/src/cmd/query/jaeger /usr/bin/jaeger
COPY --from=builder /opt/app-root/src/cmd/tempo-query/tempo-query /usr/bin/tempo-query

ENV SPAN_STORAGE_TYPE=grpc-plugin \
    GRPC_STORAGE_PLUGIN_BINARY=/usr/bin/tempo-query
EXPOSE 16686

ARG USER_UID=1001
USER ${USER_UID}
ENTRYPOINT ["/usr/bin/jaeger"]

LABEL com.redhat.component="tempo-query-container" \
      name="rhosdt/tempo-query-rhel8" \
      summary="Tempo Query" \
      description="Jaeger query container for Tempo" \
      io.k8s.description="Jaeger query container for Tempo." \
      io.openshift.expose-services="16686:http,16687:metrics" \
      io.openshift.tags="tracing" \
      io.k8s.display-name="Tempo Query"