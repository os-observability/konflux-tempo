---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    pipelinesascode.tekton.dev/task: "[tempo-upgrade-tests]"
  name: tempo-operator-upgrade-test-fbc
spec:
  description: |
    This pipeline automates the process of running upgrade tests for OpenShift Tempo Operator
    using a ROSA (Red Hat OpenShift Service on AWS) cluster. The pipeline fetches the FBC fragment image, provisions
    the ROSA cluster, runs the upgrade tests, collects artifacts,
    and finally deprovisions the ROSA cluster.
  params:
    - name: SNAPSHOT
      description: 'The JSON string representing the snapshot of the application under test.'
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - name: test-name
      description: 'The name of the test corresponding to a defined Konflux integration test.'
      default: 'tempo-operator-upgrade-test-fbc'
      type: string
    - name: namespace
      description: 'Namespace to run tests in'
      default: 'openshift-tempo-operator'
      type: string
    - name: operator_csv_version
      description: Version of the operator
      type: string
    - name: operator_tempo_version
      description: Version of the Tempo operator
      type: string
    - name: operand_tempo_version
      description: Version of the Tempo operand
      type: string
    - name: tempo_tests_branch
      description: "The repository branch from which to run the tests"
      type: string
    - name: PACKAGE_NAME
      description: "Package name for the bundle"
      default: "tempo-product"
      type: string
    - name: CHANNEL_NAME
      description: "Channel name for the bundle"
      default: "stable"
      type: string
  tasks:
    - name: parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/integration-examples
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/test_metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
    - name: eaas-provision-space
      runAfter:
        - parse-metadata
      when:
        - input: $(tasks.parse-metadata.results.test-event-type)
          operator: in
          values: [ "push", "Push", "PUSH" ]
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
      params:
        - name: ownerKind
          value: PipelineRun
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: provision-cluster
      runAfter:
        - eaas-provision-space
      when:
        - input: $(tasks.parse-metadata.results.test-event-type)
          operator: in
          values: [ "push", "Push", "PUSH" ]
      taskSpec:
        results:
          - name: clusterName
            value: "$(steps.create-cluster.results.clusterName)"
        steps:
          - name: get-supported-versions
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-supported-ephemeral-cluster-versions/0.1/eaas-get-supported-ephemeral-cluster-versions.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.eaas-provision-space.results.secretRef)
          - name: pick-version
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
            params:
              - name: prefix
                value: "4.17."
          - name: create-cluster
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.eaas-provision-space.results.secretRef)
              - name: version
                value: "$(steps.pick-version.results.version)"
              - name: instanceType
                value: "m5.2xlarge"
              - name: timeout
                value: "40m"
              - name: imageContentSources
                value: |
                  - source: registry.redhat.io/rhosdt/tempo-rhel8-operator
                    mirrors:
                      - quay.io/redhat-user-workloads/rhosdt-tenant/tempo/tempo-operator
                  - source: registry.redhat.io/rhosdt/tempo-rhel8
                    mirrors:
                      - quay.io/redhat-user-workloads/rhosdt-tenant/tempo/tempo
                  - source: registry.redhat.io/rhosdt/tempo-query-rhel8
                    mirrors:
                      - quay.io/redhat-user-workloads/rhosdt-tenant/tempo/tempo-query
                  - source: registry.redhat.io/rhosdt/tempo-jaeger-query-rhel8
                    mirrors:
                      - quay.io/redhat-user-workloads/rhosdt-tenant/tempo/tempo-jaeger-query
                  - source: registry.redhat.io/rhosdt/tempo-gateway-rhel8
                    mirrors:
                      - quay.io/redhat-user-workloads/rhosdt-tenant/tempo/tempo-gateway
                  - source: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8
                    mirrors:
                      - quay.io/redhat-user-workloads/rhosdt-tenant/tempo/tempo-opa
                  - source: registry.redhat.io/rhosdt/tempo-operator-bundle
                    mirrors:
                      - quay.io/redhat-user-workloads/rhosdt-tenant/tempo/tempo-bundle
    - name: tempo-upgrade-tests
      description: Task to run tests from service repository
      runAfter:
        - provision-cluster
      when:
        - input: $(tasks.parse-metadata.results.test-event-type)
          operator: in
          values: [ "push", "Push", "PUSH" ]
      params:
        - name: TEMPO_TESTS_BRANCH
          value: $(params.tempo_tests_branch)
        - name: FBC_FRAGMENT
          value: "$(tasks.parse-metadata.results.component-container-image)"
        - name: TEMPO_OPERATOR_VERSION
          value: $(params.operator_tempo_version)
        - name: TEMPO_VERSION
          value: $(params.operand_tempo_version)
        - name: OPERATOR_CSV_VERSION
          value: $(params.operator_csv_version)
      taskSpec:
        params:
          - name: TEMPO_TESTS_BRANCH
            type: string
          - name: FBC_FRAGMENT
            type: string
          - name: TEMPO_OPERATOR_VERSION
            type: string
          - name: TEMPO_VERSION
            type: string
          - name: OPERATOR_CSV_VERSION
            type: string
        volumes:
          - name: credentials
            emptyDir: {}
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.eaas-provision-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          - name: run-upgrade-tests
            volumeMounts:
              - name: credentials
                mountPath: /credentials
            env:
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
              - name: FBC_FRAGMENT
                value: "$(params.FBC_FRAGMENT)"
              - name: TEMPO_VERSION
                value: "$(params.TEMPO_VERSION)"
              - name: TEMPO_OPERATOR_VERSION
                value: "$(params.TEMPO_OPERATOR_VERSION)"
              - name: OPERATOR_CSV_VERSION
                value: "$(params.OPERATOR_CSV_VERSION)"
            image: registry.redhat.io/openshift4/ose-cli:latest
            script: |
              echo "Kubeconfig file"
              cat $KUBECONFIG
              TEMPO_TESTS_BRANCH=$(params.TEMPO_TESTS_BRANCH)
              
              echo "Install dependencies"
              dnf -y install jq vim unzip git make

              echo "Install GO"
              curl -Lo /go.tar.gz https://go.dev/dl/go1.22.10.linux-amd64.tar.gz
              tar -C /usr/local -xzf /go.tar.gz
              export PATH=$PATH:/usr/local/go/bin
              # Set the Go path and Go cache environment variables
              export GOPATH=/tmp/go
              export GOBIN=/tmp/go/bin
              export GOCACHE=/tmp/.cache/go-build
              export PATH=$PATH:/tmp/go/bin

              # Create the /tmp/go/bin and build cache directories, and grant read and write permissions to all users
              mkdir -p /tmp/go/bin $GOCACHE \
                && chmod -R 777 /tmp/go/bin $GOPATH $GOCACHE
              go version

              echo "Install Chainsaw"
              go install github.com/kyverno/chainsaw@v0.2.12

              echo "Install kubectl and oc"
              cd /tmp/ \
              && curl -L -o oc.tar.gz https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/openshift-client-linux-amd64-rhel8.tar.gz \
              && tar -xvzf oc.tar.gz \
              && chmod +x kubectl oc \
              && mv oc kubectl /usr/local/bin/

              echo "Run upgrade tests"
              git clone https://github.com/IshwarKanse/tempo-operator.git /tmp/tempo-tests
              cd /tmp/tempo-tests
              git checkout $TEMPO_TESTS_BRANCH

              #Enable user workload monitoring.
              oc apply -f tests/e2e-openshift/monitoring/01-workload-monitoring.yaml

              # Unset environment variable which conflicts with Chainsaw
              unset NAMESPACE

              # Execute Tempo e2e tests
              chainsaw test --config .chainsaw-openshift.yaml tests/e2e-openshift-upgrade --values - <<EOF
              upgrade_fbc_image: $FBC_FRAGMENT
              upgrade_operator_version: $TEMPO_OPERATOR_VERSION
              upgrade_tempo_version: $TEMPO_VERSION
              upgrade_operator_csv_name: $OPERATOR_CSV_VERSION
              EOF
