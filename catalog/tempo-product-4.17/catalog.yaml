---
defaultChannel: stable
icon:
  base64data: iVBORw0KGgoAAAANSUhEUgAAAXIAAAFyCAYAAADoJFEJAAAACXBIWXMAAG66AABuugHW3rEXAAAgAElEQVR4nO3dMWxcyX3H8dGdLzg7CY7qXEVUl05UZyAFxe46kp1dkeySSmSXVBQrwxWpyjikkNg5FckqcSUSiAF3ouAUSSUqadyJQmJHiR1f8Nt741tRu9w3/5l5b+a97wdYUDhrue+9tX47+5//m3EAAAAAAAAAAAAAUKM7vGtJLDePFefcknPuQfNTHlV+bkAK583vuHbOvWp+XjrnrpoHIhDk4R41gf2g+blS2wkABbpsHm+a0D/nTWqPIL/dUhPcq1MBDqAbl02gXzQ/r7nusxHkH1NYbzjn1gluoCgK9jPn3GnzZzQI8m8osLeaAF8u4YAA3OqqCfRjQn3cQa7A3m4CnPAG6nXVBPrzsU6cjjHIfXjTTQIMz/lUqI/GWIJck5a7jL6B0fCj9KMxTJIOPcgV2o+bUfhSi78PYFium9H50yGXXYYa5Arw/SbAAcA1gX4wxED/tIBjSEmj7r91zp3QOgjghpWmxHqn6XR5P5QLNKQg320C/MsCjgVAudTo8NfOuf9xzv1yCO/TEEorelOelTqJubS05FZWZn85ePSIxhkMx/n57LvqLy8v3fV1sfONKrPs1L4kQM1BvtQE+EbfB6KgXl5envx88ODBH8NbPwF8Q2HuQ/3Vq1eTP19dXU1+FuC0CfQqO1xqDfLdZjKz86RUYGskrcBWWDOqBuJpNK9AV8Drzwr4Hlw3k6FHtb2ltQX5UlMH7zQ9NzY23Orq6uSnghxAXgry09NTd3FxMfnZMZVZNmsandcU5BtNKSX7KFwlEYX2+vr65CeAfinMz87OJj87qrdfN6WWzj9FLGoI8qWmjLKb+4V8eG9v034OlOr58+d/DPUOHDXllqJH56UH+XLunnCNvnd3d93W1hZlE6AiKr8cHx+7o6Oj3KP0y6bUUuyNRCUHedZSikJ7f3+f0TcwABqlHxwc5JwkLbrUUmqQq4xymOMXq8vk8ePH1L6BAVK55enTp3N72hPYK7GrpcQgf5ZjjRSNwJ89e0a7IDACCvKdnZ1cI/Tnzei8GJ8UdCwqobxIHeKqgSvAX79+TYgDI6F/6/o3r3/7GW7M226yqpg7/koZkfsQTzqp+eTJk0kZhTssgfHSRKjKLcqDxDQJulZCR0sJQZ68M0WfxoeHh3PXOAEwPrpzdG9vL3X9vIiOlr5LK0ral6lCXCNvBfiLFy8IcQAfUCYoG5QRCb+lJ80wqz5H5Csp60x6k05OTugFB7CQJkE3NzdTLth13ZRZelkBrK8R+XLKEFft6+XLl4Q4gFaUFcqMhHVzP8/XSwj1MSJPNrGpr0cahdONAsBKNXONzhPdHdrLBGjXQZ4sxH29i44UALEU4mtra6lKLZ2HedellSTdKbqtXl+LCHEAKShLlCmJluxYabKuM13u2ZlkNx/VtDTrDACpaemOO3fupGhRXG4eZ128SV0F+W6zu30U3aWllQoBIBfNuWkyVEvlRtLI/F0XGzx3EeR+FUMzfe356U9/ykqFADrh9+HVDkXv37+PeckvnXOvnHP/mvO4c092LjfN8uZitkKcG3wA9EGTn5oEjexo0ZMf5rz7M+dkp99fkxAHUKVE3XHRWbhIziDfj+lQIcQBlCBRmK80mZhFrhr5Ruzi66qJf/nll+mOCACMvv/9708ekROgP8hVL89RI9fH1uuYrxHqTmFiE0BptKWcNqyIoHr5/dQ3C+UYkf+jc+4vrU9WnzgthgBKpDJLZJ/5583I/Djl6aUOciXwX1ufrFE4N/sAKJn6zN+8eRNzO/9y6v7ylKWVqJKKPul0iywA1ODhw4cxYZ60xJIyyE+st+BrNlj767F2CoBaqLf8/v37MT3mp83uQtFStR8+illHRUvREuIAauKX0Y6w0WRntFQ1cvMmEZrcpEMFQI10G3/k5KeC/GnsqacorWiC0zRDSV0cwBBE1sv3Yu+7iQ1y8wSnX/+X7dkA1E57gCrMjfXy6InP2NLK3zarewX78Y9/zJ2bAAZBA9PPP//c/fznP7ecjnrL/0e7zlmvRcyIfLkZjQdTH6bWLgCAIdFKiRH18vvWFRJjulbMC8Bw0w+AIYrMNnOmWksrGo0/tzxRXSo//OEPjS8LAOXSwloRXSwrza37wbVya2nlsOlWCcKNPwCGLvJGoaOmiyWIpbSiFDY1futrByEOYMiUcREllm1LF6BlRP7EUstRm6FG4wAwBhqVqy3R4KDJ2dYsI/Ity5FpjXEAGIuIzAvO2NAg324mOoOo3VAPABiLiNxbDi1fhwa5aTT++PFjy9MAoGoR2ReUtSE1ctMNQNTGAYxZRK289Q1CISNyU6fK/n62jaMBoHgRGdg6c0NG5K9D6+Nqw3n79m3IUwBgcO7evWvpK79qRuULtR2Rr1gmOdlEGQDMWbjcZO9CbYPcNMm5tWV6GgAMSkQWtnpi2yAP3sZtY2ODtcYBoGn6UCYatHpSmyA3lVXW19d5/wCgYczEVuWVNpOdwbfkM8kJAB8zTnouvGW/zYg8+GPE+BUCAAbNmI0LM3hRkC+1nTX94FUpqwDAR4zZuLJoRcRFpRV9fJyEvurXX38d+hQAGAVtPGGw6Zw7nfe0RSPy1dDXo6wCAPMZM/LWLF4U5MFLd62uBmc/AIyGMSNvzeJFY/zgGokWyKJ/HABm0wJaWkjLYG5e3zYiDx6NK8AJcQCYLyIn52Zy0iBn8wgAWMyYlXM7CL9zy5Puhb7KgwcPQp+CAuirXtv1kvnWBcQzZuXcJ90W5MH94ysrwU9Bh87Pz93l5aV78+bN5KcehrvMJnT3rt5vPe7duzf5yTcyoB1jVs590m2TncETnfSPl0XBfXFxMfmpRxf8PoWamSfYgfmM/eQznzTvNwVv66ZPmJcvX1oODAmdnp66s7OzyU/raDsVjdrVM6u72bi/APjQw4cPJ9+KA83c/m3eZGdwEZS6aX9U397b25ssyLO5uemeP3/ee4iLjkHHomPSsekYjXsXAoNjzMyZT5oX5NTHK6Byydra2qQn9ejoqIjwnkfHpmPUseqYuyr1AKVKWSefF+S3LtAyCx0r3dEoV1/Lag1E/wGkc9C5AGNkzMyZ2TwvyINfQfVQ5OUDcGdnx1JbK47OQefCCB1jZMzMmdmcbEROaSUf1ZVVZx5q4PkPKJ0jNXSMhTEzg0bk4b+dEXkWqiurBKEulKHTOepcdc7A0KXMzHnth0EN4Wztlp4fhQ+hhGKhHvRnz57RDYVBM2799lFuJxmRU1ZJy09mjjXEXVNuYTIUQ5cqO5OVVhBPn8ya/NOj5FbCrnA9gHZuW2sFHVJQacKv61G4XwSrzWJYfnGtkEW2UtCoXNflxYsXzMUAMxDkBVBIKcRzjzoVgn4dlBSLXPlFuPx6LjmPX6+jm4kU5pTygA8lmexUIOgfGMLlDnGNsrXOydbWVvYA1LkcHx9Puk9yjdj1YUSYYyiMLcWtJjuD2wT4umujwMsV4tvb25PA09Z7h4eHnQSfXkOvpdfUa+sYUvMlqDG0YwJtzQry4KEUo6NwCiK1F6YMcX2gPnnyZBKkat3rcxlZ3z6oY9Expfyw1zXTtSPMUTu6Virmb01PyQf4/v5+Ub3XOhYdkw/0lIayVAHGK9UAhyDvWOqauOrfPsBLLnHp2Hygp1qbvK9OH6A0dK10yAdPihBXMKp0UduGDRqhn5ycTMoiKfrD/TXVB0RtczW/r2zdnO+w41OxCPKOpAxxhbdCvOZJZp2D6ugK89hat7+2tfSZ/+701P12b8/9obIFwj5ZXnbfOzx0n7HbU3EorXREu+OkKAGoK0Qj2iF0CukcdC46p1i6trrGpfvNzo77r83N6kJcdMw69t8knt9BPIK8A7ozMXbNEIWe9kTd3d2t5Kzb0znp3GI/nFJc55w0Ev/fAawdo3P4HR1DRSHIM/P7acZQi9LQb4JJdY4l7wv62wq+MbQ1pHMZAoI8s9gJvTGEuJfiXP1CW6XRxGaN5ZR5dC7/R7dQMQjyjLRBQsyOPj7YxnTnbIpb8HXNS9uc4usBrt44xHOqFUGeib7eHxwcmH/5GEPcSxHmuvZsG4exIMgzUa3WWlLxPeJjXsMm9hro2pfUxXKH9YiQEUGegb7ax/RGs7rfN/y3Eiu9B+zOjzEgyDOIKalYVirURNr0ozQxx+dXVLSKeS+AWhDkiamP2ToK1N2OIX3i6ud9d/+++8+1tQ8e+m8l9CunOj5dE+tSBHov2PcTQ0eQJ2YdAfqacFu6u06PWS1t+m/+f+9L6uOLqZc/ffq0t+sAdIG1VhLS6M/aKRESVBrNthnR+r/zpwEfECkooNse32erq+5PWmxA4T/otA55KN2+r/emz/XZLbSuyacdzZWoJ5ybfOpFkCdkHY2rbBBSOvjvgNfpOszbhrinc2kT5G7qOlkmkvXe1BbkCnFWHEQblFYS0UjcWhsPmczTyCn0DkEFaxdlltAQd4Y7BK0TnzHfloDSEeSJWOuw2jUnZEcf6910ucPcEuJeyDnpWll3GqJWjqEiyBOxdEao7vv48ePOjjFXmMeEuIWumWXik+4VDBVBnoBqtpa7ONVWFxpIsXcIpg7zFCEeek66ZpblfPUesWEzhoggT+Ds7Mz0S7a2toKfowmwTyI3V04V5ilCXOdi6cywXDsX8V4BJaNrJQHLKG97e9u82/139/ejgzi2myVVOUXnYqFrp2sYWi7Re/X3xg+BGCz5ipwI8kjqhrCUVawjSlG73u8uLqKD1BrmqUJc59G29XAWXcPQINd79U9ra+6vzK8KlIfSSqSLi4vgX6DRZGxPs8I3JgS90DJLyhCP7W3XNbR8q/nnqFcFykOQR7L0jlvXDbmp6zAvKcQ9y7X8RZJXBspBkEeyBHlMWeWmrsK8xBB3xmvJiBxDQ5BHsIS4WudSrzWeO8xLDXHXLHNr6SlnVI4hIcgjXBo6EXKt95ErzEsOcc9yTX+V5UiAftC1EuHNmzfBT15dXc12PD4oU3WzpPhdLnOIu+aahraA/nu2owG6R5BHsIzIc2/hliPMY+QOcWe8pv+S5UiAflBaiVBSaWVaqjJLrC5C3FFaAQjyGKE3Alnv5LToO8y7CnEv9Nq+y3kwQMcIciPL2tZdBrnrMcy7DnFnvLbUyTEUBLlRDUHuegjzPkLcGa/tf2Q5EqB7THZ2qI8gdwknQBfpK8Sd8dp+9/DQ/Tl7YmIACPKRyB3mfYa4FXtiYigorYxIrjJLjSEODAlBbmRZuvaLL77o/bhThzkhDvSPIO/Qu3c0vQFIjyA3sizUVILUGyXn3p0fwGIE+Yjk2u2eMAf6RdfKSOQKcS92D1B8rMt9PtlTtG4EeYcsNxGlkDvEvT7DvK9rmxN952iL0oqR5QaUPsKmqxD3+iqz1HKnLZADQW5UQ5B3HeJeH2FOkGPMCPIIoZ0rXQZ5XyHudR3modeWEMeQEOQRLBsaWPb5DNV3iHtdhbnlmhLkGBKCPIIlyC2bUYRIucdmF7vzp1DiTk1AlwjyCPfu3Qt+8sXFRbbjSb1Rcu7d+VOxXFPLeweUiiCPUFJpJddu9zWEueWaMiLHkBDkESx7RWqxrdTllVwh7pUc5rqWlgXMutg7dZqWy/1kQHV5nQtLAJeDII9kCYTj4+Nkr587xL1Sw9xyLbsOce97h4e9vG4OQzqXISDII1lC4fT0NMlrdxXiXolhbrmWfQX5ZxsbvW6InYrOQeeCchDkkVZXV4N/gXqeY2vlXYe4V1KY6xpaevPX19ejXjeGrt+fnZxUWWbRMevYWU+nPKy1EkmjO90YFFqnVUnAOjJUCPYR4l6qbeP0/M9WV80fDJayit6rvic6NZr9YmPD/T7iw9yyB6jKIZ8az/3O0pL5uciPIE9gY2PDPQ8MNf39/f19040p/31wEH3QsTv7pApznYslyDUSD73mrnmvStH1ZCF7lA4XpZUErF/VLSNKjcT+EHmrf6rt2VKUWXQuliVUrRPGfZZVgFwI8gQ0yrPsGHR0dBRckvna0Go3LfUemynCPPScdM107ULp209JI3IgFYI8kW1DmCmQnj592tkx5tooOdfu/PPomll6xwlxDBVBnsjjx49Nv+jJkydBnRd3jHuF5t7tPibMQ85J10rXzML6HgGlI8gT0dd2axfKXkD3gSasQlvXcoe4ZwlznUtIN0TItZqm0TgrHmKoCPKE1IVioZtaQm5s+W7A63QV4l5omIecS+h1msZoHENGkCekEbl11Lezs9O67tt2idmuQ9xrG+YhS+Xq2uwYbyDS+9LX3ZxAFwjyxKyj8tCg8svMziqz6L/5/70vqY8v5IPuJut7AtSCG4ISU/eKepwtt+CrbKC2ut3d3VZ/349ob94hWMpNH6mOT9fEWlJhNI4xIMgz0AjQupaKJvMUPCG3kZd+t17M8WmZWusEp2M0jpGgtJKBgjimZ3ltbS37lnA10DXQtbDStyNG4xgDgjyTw8ND092ebqpebq0JD0HsNdC1P2TNbIwEQZ6Juldivtb70egYw1znHPutRNfe+kEK1IYgz0iTljFLpo4xzFOEuMopbSeMgSEgyDM7OTmJGhn6MB9DzTzFuepaP2PjA4wMQZ6ZSiyxtdoxhHmqc1SIcys+xoYg74C6JyyrI05TyeHhw4em5VtLp3PSucWWkFROYYVDjBFB3hGNylNsMaae6s3NzUHUzXUOOpeYPnEABHlnVLt98eJFkk4K3eV4//79ZLvx9yHHOWhkb12PBagZQd6hlGHuR7N6WHaS74uO1R93jm8V2seTMMfYEOQdU3klVZi7qZHtwcFB0eUWHZuOsYtvEoQ5xoYg74HCPHWLnHbN8YFe0ghdx+ID3LqzjwVhjjEhyHui7orYHvObNOr1ga4Qsy7clYJeW8fgA7yPbwuEOcaCIO+RwjxlmWWaQkx92QpSdYV00YPuVyrUa+q1dQx9I8wxBixj2zNfM891K75KG+rm0EMfGLp9fXV1dfK6sSsDatSt8L64uJj8udQavf9A4Y5PDBVBXgCF6uvXr7Pfvamgvbnvpe6CnH5M++KLL9y7d+/++F/0oTD9qAlhjiEjyAvhWxNVmuiyJOGDuWR+AazYu1oJcwwVQV4Qv+CTSh8K9DGvR+6mroe/7V7XI/ZDjjDHEDHZWSCty/Ly5ctR726jc9c1mF47ReEbu2aNYwIUA0SQF0r1apVaYnYaqpHf2UfnPmsVQ8Ic+BhBXjjVh2+OTIdKAa1J30WbQhDmwIcI8gpoZKqbhzRKHWK5Reekc1NAt/32QZgD3yLIKzIdeCmWxO2bPx/rBxRhDnyDIK+QnwytdYTu72hNcfyEOUCQV82PaH1dueRJUZWHdIw6VpWJUn4AEeYYO4J8APy+oG/fvp2EpEKthFDXMehYdEwKcB1jrv00CXOMGTcEDYzKFnr8/daW+6e1NffPzrlfODf52QWNtPVYX1/vvI7vb/LhpiGMDUE+YH/VPDwF+q+cc//unPuX5s/vjKfv12dRWN+7dy/JIlwpEOYYI4J8RG4Gu6dg/w/n3HcPD92nC0bRPsBLRphjbAhyuL9oHn++suK+M5A+dcIcY8JkJwaLCVCMBUGOQSPMMQYEOQaPMMfQEeQYBcIcQ0aQYzQIcwwVQY5RIcwxRAQ5Rocwx9AQ5BglwhxDQpBjtFKGeeyNR0AMghyjlirMDw4Oxn4p0SOCHKOXIsyvrq7c5eXl2C8lekKQA4nC/Pr6mkuJXhDkQCNVmQXoGkEOTIkJ85K32sOwEeTADZYw95tsAH0gyIEZQsN8f3+fy4jeEOTAHG3DXH+H2jr6RJADt1CY6zFrezv9N/+/A31iqzdgAT/iPj8//+AvlrDZNOAIcqA9ghulorQCAJUjyAGgcgQ5AFSOIAeAyhHkAFA5ulYK9vsb7W4h/s+wpKrlOdO+Q1dHEN5fpEKQF+h3p6fut3t77g9XV50enF4zxifLy+57h4fus42NGi5zb3h/kRqllcL8ZmfH/dfmZuf/yFPQMevYf8MelnPx/iIHgrwgGqn97wD2ftQ56FzwId5f5EKQFyT2qy/nUjbeX+RCkBdCE181ft2eR+cSO7k2JLy/yIkgL8TXA9zvcYjnZMX7i5wIcgCoHEFeiDvs9zhovL/IiSAHgMoR5ABQOYIcACpHkANA5VhrpWJa9+LTlZVOTkA9w9wE0i3eX7RFkFdM/8hZkW64eH/RFqUVAKgcQQ4AlSPIAaByBDkAVI4gB4DK0bWCbFjm9FtcC+REkCMb+pKBblBaAYDKEeQAUDmCHAAqR5ADQOUIcgCoHEEOAJUjyAGgcgQ5AFSOIAeAyhHkAFA5ghwAKsdaK8imyz0nS8eemMiJIEc27DkJdIPSCgBUjiAHgMoR5ABQOYIcACpHkANA5ehaqViX+0Cy52T3eH/RFkFeMfqSh433F21RWgGAyhHkAFA5ghwAKkeQA0DlCHIAqBxBDgCVI8gBoHIEeSG03Osny8uDOR+dC0vYfov3FzkR5AXRRgycy3Dx/iIXgrwgn21suD/Z3q7+PHQOOhd8iPcXuRDkhfnTZ8/cn52cVPk1XMesY9c5YDbeX+TAWisF0mjni40N9/vz82qO+c7SEvtztsT7i9QI8oIxmTRsvL9IhdIKAFSOIAeAyiUJ8ksWpQeAYOe2eZKPZsqTBPn19XWKXwMAWOzq5t+gtAIAlSPIAaByBDkAVI4gB4DK3Zlz+F+HnNbS0pJ7+/Yt/18AgAB37961NIt8lNvzRuRBPTF0rQBAOEN2zszmZKUVwhwA2kuZmfOCPPgVuCkIANozZubMbJ4X5K+CfzsjcgBozZiZM7M52Yj81avg7AeA0TJmZtCIPHjMT2kFANozZubMJ80L8o/u5V/k6ir4KQAwWsbMnPmkeX3kLrSXfPKEr4OfAgCjdOfObfE718wn3dZ+GDzuNy7JCACjYszKuZmcNMipkwPAYinr425BkAdPqdK5AgCLGbNy7pMorQBAx1KXVhZV24NnL1+/fu2Wlz/aiQgA0HSr3L9/33Ip5ub1orVWgkflp6enoU8BgNEwZuStWbwoyIPH/xcXF6FPAYDRMGbkrVm8qLSy4Zw7CX1F+skBYDZj//imBvPz/sfkI3JHeQUAZorIxluzeFGQX1vq5GdnZ6FPAYDBM2bj5aKFDNtsLBH8yozIAeBjxmxcmMFtgjz4lbXO7vPnz0OfBgCDpUw0rkG+MIPbBPmlZTVEyisA8C1jJl61KW+33bMzeFSurxAsbQsA39wEZCyrtHpS2yA/thzB8bHpaQAwKBFZ2OqJIQ2Nr51zQffeLy0tubdv34Y8BQAG5+7du5b6uEoare7lbzsid5ZROZOeAMYuYpKzdeaGjMiXm1F5EC2gpYW0AGCMtECWcb7wfttGk5AR+ZXlTs+IIj8AVC2i6eM8pFswJMidddLz6dOnlqcBQNUisi8oay2rtwRPesqLFy/co0ePDC8HAPXR5hFra2uW4249yemFjsiddVS+s7NjeRoAVCki84Iz1hLkR4sWcJlFdSI6WACMgbLOWBu/bjI2iGlhXOfcoXNuN/RJ6itXB4t+AsAQqdVQnSrGlkOF+F7okywjcjFV8HViTHwCGDJlnDHEnTVbrSNyeeac27Y88eXLl25lZSXipQGgPJeXl+7hw4fW41Lt2VRYjwly0w1Cou4VdbEAwJCoS0XdKkatbwC66dOIa3jdfBAE9xRqEkB18h/84AcRLw8A5Tg6OnJfffWV9ekHllVmvZgRuSw1o/Lg2UsFuUosuoUfAGqmwalKKsba+HUzGjcX1q2TndMHcGB64vW129zcjHx5AOifsixigvMgJsRdZGnF+2Uz6Rk8Kv/1r3/t7ty5wx2fAKp1cHDgfvazn1kPXzXxH8Wee2xpxVMSm2cvuX0fQI0ibsP31iyLEd6UKsjlxDm3YXkiNwoBqE3kjT+umdxMUl9OGeTmiU9RX7kmPwGgBprcVN+4UfQE57TYyc5p5olP1zTSs7AWgBooqyJC3KWY4JyWYrJz2i+bermpp1AXhslPACXT5KZ6xiOoJv43KU8xZWnFiyqxyLNnz9z2tunufwDIRqsaRlYOkpZUvNQjcnnvnPs359wPrb/g7OxscqMQ67EAKEWCEHdNq2FUTWaWHCNyz7TUracOFrUlEuYA+qayr9oMIzpUnHWJ2jZyBvlS01tuTmLCHEDfEoX4ZdMznrSk4uUMctdMer6MqZcT5gD6kijE9eSH1pUN20jZfjjLlXV9XU8XUBeSbeIAdEmZkyDEXZOB2ULcZZrsvOlfnXPvnHNfWn/B+/fvmQAF0Bk/sansibTXbBiRVRdB7pr+8uWYerlrulnoMweQk/rE9/aSzEkqwP+uizcrd438pheWjShuUo+5es0BICWNwhOVcc+byc1OdB3k0Z0snkosmgRloS0AsfxcXORt917WDpVZck923nTdnGD01dIF18pjEfvjAcAkQ5QltYa46yHIXXOCmylO1H+KqqYFAKGUHYk6U9zUQLXTEHc9lFamrTRlliS1EZVaTk5O2AMUwELaY1PbsyUahbuU1QaLPkbkXtKvIHpDtD5w5KpkAAZOGRG5lvhNvYa463lE7i03uwslaxBXe+Lh4SE95wD+SMGttsLE82qXTak46w0/i3TVR34bfZr9Q3PD0PdT/EJ9bfrqq68mPecK888//zzbwQMom+rfP/nJT9yPfvSjSTYk5KsKv+77ApQwIveWmpF50rt91J6o0TnrmwPjo55wjcITTWZOO0/VtJFCSUHu6U6f5KmrSVDdRMRdocDwqXyim3sSj8C957FrSKXW52TnPDs51uzVG6o2Iz1OT09T/3oABdC/bf/vPFOI75UW4q7QEbm30YzOs9y6qRH6/v4+JRdgAFRCUU94pvB2TQlFAV7kKLDkIHc5OlpuUg19d3fXbW1t0YMOVEShfXx8PGknzFADn1ZEZ8ptSg9y14zI92O2jWtrYxKFiOAAAAHrSURBVGPDra+vM0oHCqbRt1ZC7ahEqhtTDkqZ1JynhiD3spZapmmU7kNdPwH0S6Htwzvz6NsrupRyU01B7nK1KC6iMF9dXZ38pPwC5KeyiUL74uKij+aEoloL26gtyL3dptzS+Rq2CnK1MD548GBysxHtjEA8tQvqzstXr15N/pxx0vI2100Zpbp1PmoNcteE+LOm5NIrBbrfhk4Br9KM/sxa6cC3VBJRWOunAlt/VmAnXPMkxmlTSqlmFD6t5iD3HjWBXmzNY96ondE8hmTeGiY+vAvlN4ivemODIQS511u5BUB1qi2jzDKkIHdNiPtAB4BZfIBXWUaZpYTVD1N633xFOm5CnXVsAXjPm26U0yYrBmNoI/KbVDd/3CzCRckFGJ/rJsCflnxnZqyhB7nnSy5bJU+KAkjmqvlmPqgSyjxjCfJp202g0zICDI8vrT4f03s7xiD3lqdCnVE6UK+rqfAebPnkNmMO8mkrTaBvEOpAFa6aSUsFeBF3FPWJIP/YShPo63S9AEVRYJ81AT768J5GkN9uqamlrzY/CXagO5dNzfui+Tn4SUsrgjycD/QHzU/CHYh32TxeTQU4WiLI01huHivNKP7BVN863THAt8F83YT1dRPYV2OdoAQAAAAAAAAAAACAcXPO/T8Cg4q93lazewAAAABJRU5ErkJggg==
  mediatype: image/png
name: tempo-product
schema: olm.package
---
entries:
- name: tempo-operator.v0.1.0-6
- name: tempo-operator.v0.1.0-6-0.1687199947.p
  skips:
  - tempo-operator.v0.1.0-6
- name: tempo-operator.v0.10.0-6
  replaces: tempo-operator.v0.8.0-3
  skipRange: '>=0.6.0 <0.10.0-6'
- name: tempo-operator.v0.10.0-7
  replaces: tempo-operator.v0.10.0-6
  skipRange: '>=0.6.0 <0.10.0-7'
- name: tempo-operator.v0.10.0-8
  replaces: tempo-operator.v0.10.0-7
  skipRange: '>=0.6.0 <0.10.0-8'
- name: tempo-operator.v0.13.0-1
  skipRange: '>=0.6.0 <0.13.0-1'
- name: tempo-operator.v0.13.0-1-0.1730817419.p
  replaces: tempo-operator.v0.10.0-8
  skipRange: '>=0.6.0 <0.13.0-1'
  skips:
  - tempo-operator.v0.13.0-1
- name: tempo-operator.v0.3.1-3
  replaces: tempo-operator.v0.1.0-6-0.1687199947.p
- name: tempo-operator.v0.6.0-2
  replaces: tempo-operator.v0.3.1-3
- name: tempo-operator.v0.8.0-2
  replaces: tempo-operator.v0.6.0-2
- name: tempo-operator.v0.8.0-3
  replaces: tempo-operator.v0.8.0-2
- name: tempo-operator.v0.14.1-1
  replaces: tempo-operator.v0.13.0-1-0.1730817419.p
  skipRange: '>=0.6.0 <0.14.1-1'
name: stable
package: tempo-product
schema: olm.channel
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:ff86c632e7eadeae0c2f50f7b9ef1d5cb2d05ed69ec618494bf164a980a5c54e
name: tempo-operator.v0.1.0-6
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.1.0-6
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true
                  }
                }
              }
            }
          }
        ]
      capabilities: Basic Install
      categories: Logging & Tracing
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:cf9fd7d22321218a57498e787cf15be23fd47036120463fafea877bffd97fee0
      createdAt: "2023-04-27 14:06:52.655555"
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoStack is the Schema for the tempostacks API.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'MaxSearchBytesPerTrace defines the maximum size of search
            data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'MaxSearchBytesPerTrace defines the maximum size of search
            data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: 'NOTE: currently this field is not considered. ReplicationFactor
            is used to define how many component replicas should exist.'
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: 'NOTE: currently this field is not considered. Retention period
            defined by dataset. User can specify how long data should be stored.'
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are “s”, “m” and “h”. example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are “s”, “m” and “h”. example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the tempo TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate.
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap Name
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuerySpec defines Jaeger Query specific options.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Enabled is used to define if Jaeger Query component should
            be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
        - description: Ingress defines Jaeger Query Ingress options.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines OpenShift Route specific options.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination specifies the termination type. By default "edge"
            is used.
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines the id of the tenant.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines the name of the tenant. The value of this
            field should be sent in X-Scope-OrgID header to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:dynamic
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      OpenShift Operator for Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Before you start
      Make that your system has an S3-compatible storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ## Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting

      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription. This operator is at the moment tech-preview.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - tempo
    - tracing
    - database
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://tempo-operator.domain
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4564ca3dc5bac80d6faddaf94c817fbbc270698a9399d8a21ee1005d85ceda56
  name: kube-rbac-proxy
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:ff86c632e7eadeae0c2f50f7b9ef1d5cb2d05ed69ec618494bf164a980a5c54e
  name: ""
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:cf9fd7d22321218a57498e787cf15be23fd47036120463fafea877bffd97fee0
  name: tempo-rhel8-operator-cf9fd7d22321218a57498e787cf15be23fd47036120463fafea877bffd97fee0-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:cf9fd7d22321218a57498e787cf15be23fd47036120463fafea877bffd97fee0
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:0f66fffabab48f6084cbdd1495c70825b6cc411d3447bee20cb41a437b8d394a
name: tempo-operator.v0.1.0-6-0.1687199947.p
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.1.0-6+0.1687199947.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true
                  }
                }
              }
            }
          }
        ]
      capabilities: Basic Install
      categories: Logging & Tracing
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0b78c42253e6a036892e3c04b97c4ed5a1f4d15bfd5cd8e563c61df71469bf6f
      createdAt: "2023-04-27 14:06:52.655555"
      olm.substitutesFor: tempo-operator.v0.1.0-6
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoStack is the Schema for the tempostacks API.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'MaxSearchBytesPerTrace defines the maximum size of search
            data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'MaxSearchBytesPerTrace defines the maximum size of search
            data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: 'NOTE: currently this field is not considered. ReplicationFactor
            is used to define how many component replicas should exist.'
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: 'NOTE: currently this field is not considered. Retention period
            defined by dataset. User can specify how long data should be stored.'
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are “s”, “m” and “h”. example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are “s”, “m” and “h”. example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the tempo TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate.
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap Name
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuerySpec defines Jaeger Query specific options.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Enabled is used to define if Jaeger Query component should
            be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
        - description: Ingress defines Jaeger Query Ingress options.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines OpenShift Route specific options.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination specifies the termination type. By default "edge"
            is used.
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines the id of the tenant.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines the name of the tenant. The value of this
            field should be sent in X-Scope-OrgID header to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:dynamic
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      OpenShift Operator for Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Before you start
      Make that your system has an S3-compatible storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ## Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting

      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription. This operator is at the moment tech-preview.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - tempo
    - tracing
    - database
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://tempo-operator.domain
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4564ca3dc5bac80d6faddaf94c817fbbc270698a9399d8a21ee1005d85ceda56
  name: kube-rbac-proxy
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:0f66fffabab48f6084cbdd1495c70825b6cc411d3447bee20cb41a437b8d394a
  name: ""
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0b78c42253e6a036892e3c04b97c4ed5a1f4d15bfd5cd8e563c61df71469bf6f
  name: tempo-rhel8-operator-0b78c42253e6a036892e3c04b97c4ed5a1f4d15bfd5cd8e563c61df71469bf6f-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0b78c42253e6a036892e3c04b97c4ed5a1f4d15bfd5cd8e563c61df71469bf6f
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:b983271f0f7c78154bb832360c6713f58f038831a4eae3fc2d909cca44e7cf66
name: tempo-operator.v0.10.0-6
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoMonolithic
    version: v1alpha1
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.10.0-6
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoMonolithic",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "jaegerui": {
                "enabled": true,
                "resources": {
                  "limits": {
                    "cpu": "2",
                    "memory": "2Gi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                }
              },
              "storage": {
                "traces": {
                  "backend": "memory"
                }
              }
            }
          },
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storage": {
                "secret": {
                  "name": "my-storage-secret",
                  "type": "s3"
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true,
                    "ingress": {
                      "type": "route"
                    }
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing,Monitoring
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:fc817f54324540927b6105a247ee03a2b9d11bde8266450d06e0f809e6087665
      createdAt: "2024-05-30 10:43:36.643259"
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "true"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=0.6.0 <0.10.0-6'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        displayName: TempoMonolithic
        kind: TempoMonolithic
        name: tempomonolithics.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: 'Enabled defines if OTLP over gRPC is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.grpc.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.grpc.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: 'Enabled defines if OTLP over HTTP is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.http.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.http.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if the Jaeger UI component should be created.
          displayName: Enabled
          path: jaegerui.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if an Ingress object should be created for
            Jaeger UI.
          displayName: Enabled
          path: jaegerui.ingress.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Route object should be created for Jaeger
            UI.
          displayName: Enabled
          path: jaegerui.route.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Grafana data source should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.grafana.dataSource.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if PrometheusRule objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.prometheusRules.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if ServiceMonitor objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.serviceMonitors.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Storage defines the storage configuration.
          displayName: Storage
          path: storage
        - description: 'Backend defines the backend for storing traces. Default: memory.'
          displayName: Storage Backend
          path: storage.traces.backend
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.traces.s3.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingestion defines the trace ingestion configuration.
          displayName: Ingestion
          path: ingestion
        - description: Resources defines the compute resource requirements of the
            Jaeger UI container.
          displayName: Resources
          path: jaegerui.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'Size defines the size of the volume where traces are stored.
            For in-memory storage, this defines the size of the tmpfs volume. For
            persistent volume storage, this defines the size of the persistent volume.
            For object storage, this defines the size of the persistent volume containing
            the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for
            all other backends.'
          displayName: Size
          path: storage.traces.size
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: JaegerUI defines the Jaeger UI configuration.
          displayName: Jaeger UI
          path: jaegerui
        - description: Ingress defines the Ingress configuration for the Jaeger UI.
          displayName: Ingress
          path: jaegerui.ingress
        - description: Route defines the OpenShift route configuration for the Jaeger
            UI.
          displayName: Route
          path: jaegerui.route
        - description: Observability defines the observability configuration of the
            Tempo deployment.
          displayName: Observability
          path: observability
        - description: Resources defines the compute resource requirements of the
            Tempo container.
          displayName: Resources
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Affinity defines the Affinity rules for scheduling pods.
          displayName: Affinity
          path: affinity
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: ExtraConfig defines any extra (overlay) configuration of components.
          displayName: Extra Configuration
          path: extraConfig
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: OTLP defines the ingestion configuration for the OTLP protocol.
          displayName: OTLP
          path: ingestion.otlp
        - description: GRPC defines the OTLP over gRPC configuration.
          displayName: gRPC
          path: ingestion.otlp.grpc
        - description: TLS defines the TLS configuration for OTLP/gRPC ingestion.
          displayName: TLS
          path: ingestion.otlp.grpc.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.grpc.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.grpc.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.grpc.tls.minVersion
        - description: HTTP defines the OTLP over HTTP configuration.
          displayName: HTTP
          path: ingestion.otlp.http
        - description: TLS defines the TLS configuration for OTLP/HTTP ingestion.
          displayName: TLS
          path: ingestion.otlp.http.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.http.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.http.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.http.tls.minVersion
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: jaegerui.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Hostname
          path: jaegerui.ingress.host
        - description: IngressClassName defines the name of an IngressClass cluster
            resource. Defines which ingress controller serves this ingress resource.
          displayName: Ingress Class Name
          path: jaegerui.ingress.ingressClassName
        - description: Annotations defines the annotations of the Route object.
          displayName: Annotations
          path: jaegerui.route.annotations
        - description: Host defines the hostname of the Route object.
          displayName: Hostname
          path: jaegerui.route.host
        - description: Termination specifies the termination type.
          displayName: TLS Termination
          path: jaegerui.route.termination
        - description: 'ManagementState defines whether this instance is managed by
            the operator or self-managed. Default: Managed.'
          displayName: Management State
          path: management
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Multitenancy defines the multi-tenancy configuration.
          displayName: Multi-Tenancy
          path: multitenancy
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: multitenancy.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: multitenancy.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: multitenancy.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: multitenancy.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: multitenancy.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: multitenancy.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: multitenancy.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: multitenancy.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: multitenancy.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: multitenancy.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: multitenancy.authorization.roles
        - description: Enabled defines if multi-tenancy is enabled.
          displayName: Enabled
          path: multitenancy.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: multitenancy.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        - description: Resources defines the compute resource requirements of the
            gateway container. The gateway performs authentication and authorization
            of incoming requests when multi-tenancy is enabled.
          displayName: Resources
          path: multitenancy.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: NodeSelector defines which labels are required by a node to
            schedule the pod onto it.
          displayName: Node Selector
          path: nodeSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Grafana defines the Grafana configuration of the Tempo deployment.
          displayName: Grafana
          path: observability.grafana
        - description: DataSource defines the Grafana data source configuration.
          displayName: Grafana data source
          path: observability.grafana.dataSource
        - description: InstanceSelector defines the Grafana instance where the data
            source should be created.
          displayName: Instance Selector
          path: observability.grafana.dataSource.instanceSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana
        - description: Metrics defines the metric configuration of the Tempo deployment.
          displayName: Metrics
          path: observability.metrics
        - description: ServiceMonitors defines the PrometheusRule configuration.
          displayName: Prometheus Rules
          path: observability.metrics.prometheusRules
        - description: ServiceMonitors defines the ServiceMonitor configuration.
          displayName: Service Monitors
          path: observability.metrics.serviceMonitors
        - description: ServiceAccount defines the Service Account to use for all Tempo
            components.
          displayName: Service Account
          path: serviceAccount
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Traces defines the storage configuration for traces.
          displayName: Traces
          path: storage.traces
        - description: Azure defines the configuration for Azure Storage.
          displayName: Azure Storage
          path: storage.traces.azure
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.azure.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: GCP defines the configuration for Google Cloud Storage.
          displayName: Google Cloud Storage
          path: storage.traces.gcs
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.gcs.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: S3 defines the configuration for Amazon S3.
          displayName: Amazon S3
          path: storage.traces.s3
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.s3.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TLS defines the TLS configuration for Amazon S3.
          displayName: TLS
          path: storage.traces.s3.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.traces.s3.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.traces.s3.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.traces.s3.tls.minVersion
        - description: Tolerations defines the tolerations of a node to schedule the
            pod onto it.
          displayName: Tolerations
          path: tolerations
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        statusDescriptors:
        - description: Tempo is a map of the pod status of the Tempo pods.
          displayName: Tempo
          path: components.tempo
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: TempoStack manages a Tempo deployment in microservices mode.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: template.distributor.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - displayName: Extra Configurations
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: HashRing defines the spec for the distributed hash ring configuration.
          displayName: Hash Ring
          path: hashRing
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: MemberList configuration spec
          displayName: Memberlist Config
          path: hashRing.memberlist
        - description: EnableIPv6 enables IPv6 support for the memberlist based hash
            ring.
          displayName: Enable IPv6
          path: hashRing.memberlist.enableIPv6
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Grafana defines the Grafana configuration for operands.
          displayName: Grafana Config
          path: observability.grafana
        - description: CreateDatasource specifies if a Grafana Datasource should be
            created for Tempo.
          displayName: Create Datasource for Tempo
          path: observability.grafana.createDatasource
        - description: InstanceSelector specifies the Grafana instance where the datasource
            should be created.
          displayName: Create CreateDatasource for Tempo
          path: observability.grafana.instanceSelector
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: ReplicationFactor is used to define how many component replicas
            should exist.
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: 'NOTE: currently this field is not considered. Retention period
            defined by dataset. User can specify how long data should be stored.'
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.tls.minVersion
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.compactor.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.distributor.resources
        - description: TLS defines TLS configuration for distributor receivers
          displayName: TLS
          path: template.distributor.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: template.distributor.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: template.distributor.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: template.distributor.tls.minVersion
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - displayName: Enabled
          path: template.gateway.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.gateway.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.ingester.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.querier.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuery defines options specific to the Jaeger Query component.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Enabled defines if the Jaeger Query component should be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines the options for the Jaeger Query ingress.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: MonitorTab defines the monitor tab configuration.
          displayName: Jaeger Query UI Monitor Tab Settings
          path: template.queryFrontend.jaegerQuery.monitorTab
        - description: Enabled enables the monitor tab in the Jaeger console. The
            PrometheusEndpoint must be configured to enable this feature.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.monitorTab.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: PrometheusEndpoint defines the endpoint to the Prometheus instance
            that contains the span rate, error, and duration (RED) metrics. For instance
            on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
          displayName: Prometheus endpoint
          path: template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.resources
        - description: ServicesQueryDuration defines how long the services will be
            available in the services list
          displayName: ServicesQueryDuration
          path: template.queryFrontend.jaegerQuery.servicesQueryDuration
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Gateway
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      `TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.
      Please ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - tempo
    - observability
    - rhosdt
    - database
    - monitoring
    - tracing
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    minKubeVersion: 1.25.0
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b33793126e32e75f4fa02dbb014eaa7458f36c70f316a7383171a02c38509f1
  name: kube-rbac-proxy
- image: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:a1a5ac36e88fb4bde7929f48c48cc73e6adecbc4d6cf706349a72ced7732d709
  name: tempo_gateway_opa
- image: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:90271dab36fd2f453fd6f3d19f1fae282b3c277fc1ff957221ba624a3a8909ae
  name: tempo_gateway
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:b983271f0f7c78154bb832360c6713f58f038831a4eae3fc2d909cca44e7cf66
  name: ""
- image: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:e499fd2fd9798770d463974f9664deec37ca4cce3c782caaf9827d76efd74587
  name: tempo_query
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:fc817f54324540927b6105a247ee03a2b9d11bde8266450d06e0f809e6087665
  name: tempo-rhel8-operator-fc817f54324540927b6105a247ee03a2b9d11bde8266450d06e0f809e6087665-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:fc817f54324540927b6105a247ee03a2b9d11bde8266450d06e0f809e6087665
  name: manager
- image: registry.redhat.io/rhosdt/tempo-rhel8@sha256:c735ff5038e61567f960d1843e0d231b23aa5a78407acaec60b98fe48f1d74d0
  name: tempo
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:57cbaada2dce7abcabaf94d441e07d77126a60726adbb829808e157f9d0897cb
name: tempo-operator.v0.10.0-7
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoMonolithic
    version: v1alpha1
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.10.0-7
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoMonolithic",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "jaegerui": {
                "enabled": true,
                "resources": {
                  "limits": {
                    "cpu": "2",
                    "memory": "2Gi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                }
              },
              "storage": {
                "traces": {
                  "backend": "memory"
                }
              }
            }
          },
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storage": {
                "secret": {
                  "name": "my-storage-secret",
                  "type": "s3"
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true,
                    "ingress": {
                      "type": "route"
                    }
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing,Monitoring
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:49b24b932421590bab35dab44dae0bb2217af61d64a4b5387002308435840555
      createdAt: "2024-06-10 19:16:41.677131"
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "true"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=0.6.0 <0.10.0-7'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        displayName: TempoMonolithic
        kind: TempoMonolithic
        name: tempomonolithics.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: 'Enabled defines if OTLP over gRPC is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.grpc.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.grpc.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: 'Enabled defines if OTLP over HTTP is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.http.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.http.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if the Jaeger UI component should be created.
          displayName: Enabled
          path: jaegerui.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if an Ingress object should be created for
            Jaeger UI.
          displayName: Enabled
          path: jaegerui.ingress.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Route object should be created for Jaeger
            UI.
          displayName: Enabled
          path: jaegerui.route.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Grafana data source should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.grafana.dataSource.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if PrometheusRule objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.prometheusRules.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if ServiceMonitor objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.serviceMonitors.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Storage defines the storage configuration.
          displayName: Storage
          path: storage
        - description: 'Backend defines the backend for storing traces. Default: memory.'
          displayName: Storage Backend
          path: storage.traces.backend
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.traces.s3.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingestion defines the trace ingestion configuration.
          displayName: Ingestion
          path: ingestion
        - description: Resources defines the compute resource requirements of the
            Jaeger UI container.
          displayName: Resources
          path: jaegerui.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'Size defines the size of the volume where traces are stored.
            For in-memory storage, this defines the size of the tmpfs volume. For
            persistent volume storage, this defines the size of the persistent volume.
            For object storage, this defines the size of the persistent volume containing
            the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for
            all other backends.'
          displayName: Size
          path: storage.traces.size
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: JaegerUI defines the Jaeger UI configuration.
          displayName: Jaeger UI
          path: jaegerui
        - description: Ingress defines the Ingress configuration for the Jaeger UI.
          displayName: Ingress
          path: jaegerui.ingress
        - description: Route defines the OpenShift route configuration for the Jaeger
            UI.
          displayName: Route
          path: jaegerui.route
        - description: Observability defines the observability configuration of the
            Tempo deployment.
          displayName: Observability
          path: observability
        - description: Resources defines the compute resource requirements of the
            Tempo container.
          displayName: Resources
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Affinity defines the Affinity rules for scheduling pods.
          displayName: Affinity
          path: affinity
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: ExtraConfig defines any extra (overlay) configuration of components.
          displayName: Extra Configuration
          path: extraConfig
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: OTLP defines the ingestion configuration for the OTLP protocol.
          displayName: OTLP
          path: ingestion.otlp
        - description: GRPC defines the OTLP over gRPC configuration.
          displayName: gRPC
          path: ingestion.otlp.grpc
        - description: TLS defines the TLS configuration for OTLP/gRPC ingestion.
          displayName: TLS
          path: ingestion.otlp.grpc.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.grpc.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.grpc.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.grpc.tls.minVersion
        - description: HTTP defines the OTLP over HTTP configuration.
          displayName: HTTP
          path: ingestion.otlp.http
        - description: TLS defines the TLS configuration for OTLP/HTTP ingestion.
          displayName: TLS
          path: ingestion.otlp.http.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.http.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.http.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.http.tls.minVersion
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: jaegerui.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Hostname
          path: jaegerui.ingress.host
        - description: IngressClassName defines the name of an IngressClass cluster
            resource. Defines which ingress controller serves this ingress resource.
          displayName: Ingress Class Name
          path: jaegerui.ingress.ingressClassName
        - description: Annotations defines the annotations of the Route object.
          displayName: Annotations
          path: jaegerui.route.annotations
        - description: Host defines the hostname of the Route object.
          displayName: Hostname
          path: jaegerui.route.host
        - description: Termination specifies the termination type.
          displayName: TLS Termination
          path: jaegerui.route.termination
        - description: 'ManagementState defines whether this instance is managed by
            the operator or self-managed. Default: Managed.'
          displayName: Management State
          path: management
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Multitenancy defines the multi-tenancy configuration.
          displayName: Multi-Tenancy
          path: multitenancy
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: multitenancy.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: multitenancy.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: multitenancy.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: multitenancy.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: multitenancy.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: multitenancy.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: multitenancy.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: multitenancy.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: multitenancy.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: multitenancy.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: multitenancy.authorization.roles
        - description: Enabled defines if multi-tenancy is enabled.
          displayName: Enabled
          path: multitenancy.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: multitenancy.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        - description: Resources defines the compute resource requirements of the
            gateway container. The gateway performs authentication and authorization
            of incoming requests when multi-tenancy is enabled.
          displayName: Resources
          path: multitenancy.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: NodeSelector defines which labels are required by a node to
            schedule the pod onto it.
          displayName: Node Selector
          path: nodeSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Grafana defines the Grafana configuration of the Tempo deployment.
          displayName: Grafana
          path: observability.grafana
        - description: DataSource defines the Grafana data source configuration.
          displayName: Grafana data source
          path: observability.grafana.dataSource
        - description: InstanceSelector defines the Grafana instance where the data
            source should be created.
          displayName: Instance Selector
          path: observability.grafana.dataSource.instanceSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana
        - description: Metrics defines the metric configuration of the Tempo deployment.
          displayName: Metrics
          path: observability.metrics
        - description: ServiceMonitors defines the PrometheusRule configuration.
          displayName: Prometheus Rules
          path: observability.metrics.prometheusRules
        - description: ServiceMonitors defines the ServiceMonitor configuration.
          displayName: Service Monitors
          path: observability.metrics.serviceMonitors
        - description: ServiceAccount defines the Service Account to use for all Tempo
            components.
          displayName: Service Account
          path: serviceAccount
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Traces defines the storage configuration for traces.
          displayName: Traces
          path: storage.traces
        - description: Azure defines the configuration for Azure Storage.
          displayName: Azure Storage
          path: storage.traces.azure
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.azure.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: GCP defines the configuration for Google Cloud Storage.
          displayName: Google Cloud Storage
          path: storage.traces.gcs
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.gcs.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: S3 defines the configuration for Amazon S3.
          displayName: Amazon S3
          path: storage.traces.s3
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.s3.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TLS defines the TLS configuration for Amazon S3.
          displayName: TLS
          path: storage.traces.s3.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.traces.s3.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.traces.s3.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.traces.s3.tls.minVersion
        - description: Tolerations defines the tolerations of a node to schedule the
            pod onto it.
          displayName: Tolerations
          path: tolerations
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        statusDescriptors:
        - description: Tempo is a map of the pod status of the Tempo pods.
          displayName: Tempo
          path: components.tempo
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: TempoStack manages a Tempo deployment in microservices mode.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: template.distributor.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - displayName: Extra Configurations
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: HashRing defines the spec for the distributed hash ring configuration.
          displayName: Hash Ring
          path: hashRing
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: MemberList configuration spec
          displayName: Memberlist Config
          path: hashRing.memberlist
        - description: EnableIPv6 enables IPv6 support for the memberlist based hash
            ring.
          displayName: Enable IPv6
          path: hashRing.memberlist.enableIPv6
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Grafana defines the Grafana configuration for operands.
          displayName: Grafana Config
          path: observability.grafana
        - description: CreateDatasource specifies if a Grafana Datasource should be
            created for Tempo.
          displayName: Create Datasource for Tempo
          path: observability.grafana.createDatasource
        - description: InstanceSelector specifies the Grafana instance where the datasource
            should be created.
          displayName: Create CreateDatasource for Tempo
          path: observability.grafana.instanceSelector
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: ReplicationFactor is used to define how many component replicas
            should exist.
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: 'NOTE: currently this field is not considered. Retention period
            defined by dataset. User can specify how long data should be stored.'
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.tls.minVersion
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.compactor.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.distributor.resources
        - description: TLS defines TLS configuration for distributor receivers
          displayName: TLS
          path: template.distributor.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: template.distributor.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: template.distributor.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: template.distributor.tls.minVersion
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - displayName: Enabled
          path: template.gateway.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.gateway.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.ingester.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.querier.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuery defines options specific to the Jaeger Query component.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Enabled defines if the Jaeger Query component should be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines the options for the Jaeger Query ingress.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: MonitorTab defines the monitor tab configuration.
          displayName: Jaeger Query UI Monitor Tab Settings
          path: template.queryFrontend.jaegerQuery.monitorTab
        - description: Enabled enables the monitor tab in the Jaeger console. The
            PrometheusEndpoint must be configured to enable this feature.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.monitorTab.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: PrometheusEndpoint defines the endpoint to the Prometheus instance
            that contains the span rate, error, and duration (RED) metrics. For instance
            on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
          displayName: Prometheus endpoint
          path: template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.resources
        - description: ServicesQueryDuration defines how long the services will be
            available in the services list
          displayName: ServicesQueryDuration
          path: template.queryFrontend.jaegerQuery.servicesQueryDuration
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Gateway
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      `TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.
      Please ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - observability
    - rhosdt
    - database
    - tracing
    - monitoring
    - tempo
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    minKubeVersion: 1.25.0
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c2e9805d2c48d3cea7a9e348f0c37de435302e2e244415541c8a6fd75d77132
  name: kube-rbac-proxy
- image: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:8f0a4b0f01d3ec5dfcbe71fccfd9476b0af972e917325dd14368d4bd788afb45
  name: tempo_gateway_opa
- image: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:99703dd11895c936a727c8a92f65f2f538bb1338deee12d3399f7359760add80
  name: tempo_gateway
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:57cbaada2dce7abcabaf94d441e07d77126a60726adbb829808e157f9d0897cb
  name: ""
- image: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:8fb0d3bef904a99434bf026d633a5448947a716136bc7c9f2d0481fe02e270fb
  name: tempo_query
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:49b24b932421590bab35dab44dae0bb2217af61d64a4b5387002308435840555
  name: tempo-rhel8-operator-49b24b932421590bab35dab44dae0bb2217af61d64a4b5387002308435840555-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:49b24b932421590bab35dab44dae0bb2217af61d64a4b5387002308435840555
  name: manager
- image: registry.redhat.io/rhosdt/tempo-rhel8@sha256:541c08a6a6816ee954ed2e9de6261fdcd3342f06a4902aa5dd03ad18a6c676d4
  name: tempo
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:2e24ee74d2cc78c6c11f9a62f9d086e3a7c0b3009cb56734477447ea79aaeb76
name: tempo-operator.v0.10.0-8
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoMonolithic
    version: v1alpha1
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.10.0-8
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoMonolithic",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "jaegerui": {
                "enabled": true,
                "resources": {
                  "limits": {
                    "cpu": "2",
                    "memory": "2Gi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                }
              },
              "storage": {
                "traces": {
                  "backend": "memory"
                }
              }
            }
          },
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storage": {
                "secret": {
                  "name": "my-storage-secret",
                  "type": "s3"
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true,
                    "ingress": {
                      "type": "route"
                    }
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing,Monitoring
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:1aa9114c7688ed320467f165d8344277e51da1bb3c52205fe957ff46dee4ec6c
      createdAt: "2024-07-05 18:06:02.299879"
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "true"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=0.6.0 <0.10.0-8'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        displayName: TempoMonolithic
        kind: TempoMonolithic
        name: tempomonolithics.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: 'Enabled defines if OTLP over gRPC is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.grpc.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.grpc.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: 'Enabled defines if OTLP over HTTP is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.http.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.http.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if the Jaeger UI component should be created.
          displayName: Enabled
          path: jaegerui.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if an Ingress object should be created for
            Jaeger UI.
          displayName: Enabled
          path: jaegerui.ingress.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Route object should be created for Jaeger
            UI.
          displayName: Enabled
          path: jaegerui.route.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Grafana data source should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.grafana.dataSource.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if PrometheusRule objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.prometheusRules.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if ServiceMonitor objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.serviceMonitors.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Storage defines the storage configuration.
          displayName: Storage
          path: storage
        - description: 'Backend defines the backend for storing traces. Default: memory.'
          displayName: Storage Backend
          path: storage.traces.backend
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.traces.s3.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingestion defines the trace ingestion configuration.
          displayName: Ingestion
          path: ingestion
        - description: Resources defines the compute resource requirements of the
            Jaeger UI container.
          displayName: Resources
          path: jaegerui.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'Size defines the size of the volume where traces are stored.
            For in-memory storage, this defines the size of the tmpfs volume. For
            persistent volume storage, this defines the size of the persistent volume.
            For object storage, this defines the size of the persistent volume containing
            the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for
            all other backends.'
          displayName: Size
          path: storage.traces.size
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: JaegerUI defines the Jaeger UI configuration.
          displayName: Jaeger UI
          path: jaegerui
        - description: Ingress defines the Ingress configuration for the Jaeger UI.
          displayName: Ingress
          path: jaegerui.ingress
        - description: Route defines the OpenShift route configuration for the Jaeger
            UI.
          displayName: Route
          path: jaegerui.route
        - description: Observability defines the observability configuration of the
            Tempo deployment.
          displayName: Observability
          path: observability
        - description: Resources defines the compute resource requirements of the
            Tempo container.
          displayName: Resources
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Affinity defines the Affinity rules for scheduling pods.
          displayName: Affinity
          path: affinity
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: ExtraConfig defines any extra (overlay) configuration of components.
          displayName: Extra Configuration
          path: extraConfig
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: OTLP defines the ingestion configuration for the OTLP protocol.
          displayName: OTLP
          path: ingestion.otlp
        - description: GRPC defines the OTLP over gRPC configuration.
          displayName: gRPC
          path: ingestion.otlp.grpc
        - description: TLS defines the TLS configuration for OTLP/gRPC ingestion.
          displayName: TLS
          path: ingestion.otlp.grpc.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.grpc.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.grpc.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.grpc.tls.minVersion
        - description: HTTP defines the OTLP over HTTP configuration.
          displayName: HTTP
          path: ingestion.otlp.http
        - description: TLS defines the TLS configuration for OTLP/HTTP ingestion.
          displayName: TLS
          path: ingestion.otlp.http.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.http.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.http.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.http.tls.minVersion
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: jaegerui.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Hostname
          path: jaegerui.ingress.host
        - description: IngressClassName defines the name of an IngressClass cluster
            resource. Defines which ingress controller serves this ingress resource.
          displayName: Ingress Class Name
          path: jaegerui.ingress.ingressClassName
        - description: Annotations defines the annotations of the Route object.
          displayName: Annotations
          path: jaegerui.route.annotations
        - description: Host defines the hostname of the Route object.
          displayName: Hostname
          path: jaegerui.route.host
        - description: Termination specifies the termination type.
          displayName: TLS Termination
          path: jaegerui.route.termination
        - description: 'ManagementState defines whether this instance is managed by
            the operator or self-managed. Default: Managed.'
          displayName: Management State
          path: management
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Multitenancy defines the multi-tenancy configuration.
          displayName: Multi-Tenancy
          path: multitenancy
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: multitenancy.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: multitenancy.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: multitenancy.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: multitenancy.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: multitenancy.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: multitenancy.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: multitenancy.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: multitenancy.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: multitenancy.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: multitenancy.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: multitenancy.authorization.roles
        - description: Enabled defines if multi-tenancy is enabled.
          displayName: Enabled
          path: multitenancy.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: multitenancy.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        - description: Resources defines the compute resource requirements of the
            gateway container. The gateway performs authentication and authorization
            of incoming requests when multi-tenancy is enabled.
          displayName: Resources
          path: multitenancy.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: NodeSelector defines which labels are required by a node to
            schedule the pod onto it.
          displayName: Node Selector
          path: nodeSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Grafana defines the Grafana configuration of the Tempo deployment.
          displayName: Grafana
          path: observability.grafana
        - description: DataSource defines the Grafana data source configuration.
          displayName: Grafana data source
          path: observability.grafana.dataSource
        - description: InstanceSelector defines the Grafana instance where the data
            source should be created.
          displayName: Instance Selector
          path: observability.grafana.dataSource.instanceSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana
        - description: Metrics defines the metric configuration of the Tempo deployment.
          displayName: Metrics
          path: observability.metrics
        - description: ServiceMonitors defines the PrometheusRule configuration.
          displayName: Prometheus Rules
          path: observability.metrics.prometheusRules
        - description: ServiceMonitors defines the ServiceMonitor configuration.
          displayName: Service Monitors
          path: observability.metrics.serviceMonitors
        - description: ServiceAccount defines the Service Account to use for all Tempo
            components.
          displayName: Service Account
          path: serviceAccount
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Traces defines the storage configuration for traces.
          displayName: Traces
          path: storage.traces
        - description: Azure defines the configuration for Azure Storage.
          displayName: Azure Storage
          path: storage.traces.azure
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.azure.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: GCP defines the configuration for Google Cloud Storage.
          displayName: Google Cloud Storage
          path: storage.traces.gcs
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.gcs.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: S3 defines the configuration for Amazon S3.
          displayName: Amazon S3
          path: storage.traces.s3
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.s3.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TLS defines the TLS configuration for Amazon S3.
          displayName: TLS
          path: storage.traces.s3.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.traces.s3.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.traces.s3.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.traces.s3.tls.minVersion
        - description: Tolerations defines the tolerations of a node to schedule the
            pod onto it.
          displayName: Tolerations
          path: tolerations
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        statusDescriptors:
        - description: Tempo is a map of the pod status of the Tempo pods.
          displayName: Tempo
          path: components.tempo
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: TempoStack manages a Tempo deployment in microservices mode.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: template.distributor.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - displayName: Extra Configurations
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: HashRing defines the spec for the distributed hash ring configuration.
          displayName: Hash Ring
          path: hashRing
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: MemberList configuration spec
          displayName: Memberlist Config
          path: hashRing.memberlist
        - description: EnableIPv6 enables IPv6 support for the memberlist based hash
            ring.
          displayName: Enable IPv6
          path: hashRing.memberlist.enableIPv6
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Grafana defines the Grafana configuration for operands.
          displayName: Grafana Config
          path: observability.grafana
        - description: CreateDatasource specifies if a Grafana Datasource should be
            created for Tempo.
          displayName: Create Datasource for Tempo
          path: observability.grafana.createDatasource
        - description: InstanceSelector specifies the Grafana instance where the datasource
            should be created.
          displayName: Create CreateDatasource for Tempo
          path: observability.grafana.instanceSelector
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: ReplicationFactor is used to define how many component replicas
            should exist.
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: 'NOTE: currently this field is not considered. Retention period
            defined by dataset. User can specify how long data should be stored.'
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.tls.minVersion
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.compactor.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.distributor.resources
        - description: TLS defines TLS configuration for distributor receivers
          displayName: TLS
          path: template.distributor.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: template.distributor.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: template.distributor.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: template.distributor.tls.minVersion
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - displayName: Enabled
          path: template.gateway.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.gateway.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.ingester.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.querier.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuery defines options specific to the Jaeger Query component.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Enabled defines if the Jaeger Query component should be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines the options for the Jaeger Query ingress.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: MonitorTab defines the monitor tab configuration.
          displayName: Jaeger Query UI Monitor Tab Settings
          path: template.queryFrontend.jaegerQuery.monitorTab
        - description: Enabled enables the monitor tab in the Jaeger console. The
            PrometheusEndpoint must be configured to enable this feature.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.monitorTab.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: PrometheusEndpoint defines the endpoint to the Prometheus instance
            that contains the span rate, error, and duration (RED) metrics. For instance
            on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
          displayName: Prometheus endpoint
          path: template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.resources
        - description: ServicesQueryDuration defines how long the services will be
            available in the services list
          displayName: ServicesQueryDuration
          path: template.queryFrontend.jaegerQuery.servicesQueryDuration
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Gateway
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      `TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.
      Please ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - tempo
    - tracing
    - rhosdt
    - monitoring
    - observability
    - database
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    minKubeVersion: 1.25.0
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:518691d157b3e3b5031a2b1e4cc3f415839536079bb8570ae8690ac92d302ba0
  name: kube-rbac-proxy
- image: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:deb0e0697296e026babee0ac51a57ecda856ab217515d3931d5b593efdd092d0
  name: tempo_gateway_opa
- image: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:ad8a7f62784273e99893db31e53430f179dc142f09e6618bebc33d8bd8a0ef84
  name: tempo_gateway
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:2e24ee74d2cc78c6c11f9a62f9d086e3a7c0b3009cb56734477447ea79aaeb76
  name: ""
- image: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:afe94eb5fccd2821a4b37d383b5e0b527397c37679756609a5740489c7ff4aab
  name: tempo_query
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:1aa9114c7688ed320467f165d8344277e51da1bb3c52205fe957ff46dee4ec6c
  name: tempo-rhel8-operator-1aa9114c7688ed320467f165d8344277e51da1bb3c52205fe957ff46dee4ec6c-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:1aa9114c7688ed320467f165d8344277e51da1bb3c52205fe957ff46dee4ec6c
  name: manager
- image: registry.redhat.io/rhosdt/tempo-rhel8@sha256:26f66187697c3dbc4b278bed1b26d4ca84d1b42ee0448f7f87476ceb6eb20792
  name: tempo
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:ad1da7f9941a2a887431da733bf7e59ef931ea281cf6c36da49fb1dc1a4c4cfc
name: tempo-operator.v0.13.0-1
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoMonolithic
    version: v1alpha1
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.13.0-1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoMonolithic",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "jaegerui": {
                "enabled": true,
                "resources": {
                  "limits": {
                    "cpu": "2",
                    "memory": "2Gi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                }
              },
              "storage": {
                "traces": {
                  "backend": "memory"
                }
              }
            }
          },
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storage": {
                "secret": {
                  "name": "my-storage-secret",
                  "type": "s3"
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true,
                    "ingress": {
                      "type": "route"
                    }
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing,Monitoring
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:00a37371aef28f7cd5273deb8597ee88573b7d01a6bd048c2a155c5021d9d0dc
      createdAt: "2024-08-28 14:01:06.880923"
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "true"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=0.6.0 <0.13.0-1'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        displayName: TempoMonolithic
        kind: TempoMonolithic
        name: tempomonolithics.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: 'Enabled defines if OTLP over gRPC is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.grpc.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.grpc.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: 'Enabled defines if OTLP over HTTP is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.http.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.http.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Defines if the authentication will be enabled for jaeger UI.
          displayName: Enabled
          path: jaegerui.authentication.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if the Jaeger UI component should be created.
          displayName: Enabled
          path: jaegerui.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if an Ingress object should be created for
            Jaeger UI.
          displayName: Enabled
          path: jaegerui.ingress.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Route object should be created for Jaeger
            UI.
          displayName: Enabled
          path: jaegerui.route.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Grafana data source should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.grafana.dataSource.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if PrometheusRule objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.prometheusRules.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if ServiceMonitor objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.serviceMonitors.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Storage defines the storage configuration.
          displayName: Storage
          path: storage
        - description: 'Backend defines the backend for storing traces. Default: memory.'
          displayName: Storage Backend
          path: storage.traces.backend
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.traces.s3.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingestion defines the trace ingestion configuration.
          displayName: Ingestion
          path: ingestion
        - description: Resources defines the compute resource requirements of the
            Jaeger UI container.
          displayName: Resources
          path: jaegerui.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'Size defines the size of the volume where traces are stored.
            For in-memory storage, this defines the size of the tmpfs volume. For
            persistent volume storage, this defines the size of the persistent volume.
            For object storage, this defines the size of the persistent volume containing
            the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for
            all other backends.'
          displayName: Size
          path: storage.traces.size
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: JaegerUI defines the Jaeger UI configuration.
          displayName: Jaeger UI
          path: jaegerui
        - description: Ingress defines the Ingress configuration for the Jaeger UI.
          displayName: Ingress
          path: jaegerui.ingress
        - description: Route defines the OpenShift route configuration for the Jaeger
            UI.
          displayName: Route
          path: jaegerui.route
        - description: Observability defines the observability configuration of the
            Tempo deployment.
          displayName: Observability
          path: observability
        - description: Authentication defines the options for the oauth proxy used
            to protect jaeger UI
          displayName: Jaeger UI authentication configuration
          path: jaegerui.authentication
        - description: Resources defines the compute resource requirements of the
            Tempo container.
          displayName: Resources
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Affinity defines the Affinity rules for scheduling pods.
          displayName: Affinity
          path: affinity
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: ExtraConfig defines any extra (overlay) configuration of components.
          displayName: Extra Configuration
          path: extraConfig
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: OTLP defines the ingestion configuration for the OTLP protocol.
          displayName: OTLP
          path: ingestion.otlp
        - description: GRPC defines the OTLP over gRPC configuration.
          displayName: gRPC
          path: ingestion.otlp.grpc
        - description: "TLS defines the TLS configuration for OTLP/gRPC ingestion.
            \n On OpenShift when operator config `servingCertsService`  and TLS is
            enabled  but no `certName` and `caName` are provided it will use OpenShift
            serving certificate service."
          displayName: TLS
          path: ingestion.otlp.grpc.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.grpc.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.grpc.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.grpc.tls.minVersion
        - description: HTTP defines the OTLP over HTTP configuration.
          displayName: HTTP
          path: ingestion.otlp.http
        - description: "TLS defines the TLS configuration for OTLP/HTTP ingestion.
            \n On OpenShift when operator config `servingCertsService`  and TLS is
            enabled  but no `certName` and `caName` are provided it will use OpenShift
            serving certificate service."
          displayName: TLS
          path: ingestion.otlp.http.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.http.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.http.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.http.tls.minVersion
        - description: Resources defines the compute resource requirements of the
            OAuth Proxy container. The OAuth Proxy performs authentication and authorization
            of incoming requests to Jaeger UI when multi-tenancy is disabled.
          displayName: Resources
          path: jaegerui.authentication.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'SAR defines the SAR to be used in the oauth-proxy default
            is "{"namespace": "<tempo_stack_namespace>", "resource": "pods", "verb":
            "get"}'
          displayName: SAR
          path: jaegerui.authentication.sar
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: jaegerui.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Hostname
          path: jaegerui.ingress.host
        - description: IngressClassName defines the name of an IngressClass cluster
            resource. Defines which ingress controller serves this ingress resource.
          displayName: Ingress Class Name
          path: jaegerui.ingress.ingressClassName
        - description: Annotations defines the annotations of the Route object.
          displayName: Annotations
          path: jaegerui.route.annotations
        - description: Host defines the hostname of the Route object.
          displayName: Hostname
          path: jaegerui.route.host
        - description: Termination specifies the termination type.
          displayName: TLS Termination
          path: jaegerui.route.termination
        - description: ServicesQueryDuration defines how long the services will be
            available in the services list
          displayName: ServicesQueryDuration
          path: jaegerui.servicesQueryDuration
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: 'ManagementState defines whether this instance is managed by
            the operator or self-managed. Default: Managed.'
          displayName: Management State
          path: management
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Multitenancy defines the multi-tenancy configuration.
          displayName: Multi-Tenancy
          path: multitenancy
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: multitenancy.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: multitenancy.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: multitenancy.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: multitenancy.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: multitenancy.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: multitenancy.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: multitenancy.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: multitenancy.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: multitenancy.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: multitenancy.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: multitenancy.authorization.roles
        - description: Enabled defines if multi-tenancy is enabled.
          displayName: Enabled
          path: multitenancy.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: multitenancy.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        - description: Resources defines the compute resource requirements of the
            gateway container. The gateway performs authentication and authorization
            of incoming requests when multi-tenancy is enabled.
          displayName: Resources
          path: multitenancy.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: NodeSelector defines which labels are required by a node to
            schedule the pod onto it.
          displayName: Node Selector
          path: nodeSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Grafana defines the Grafana configuration of the Tempo deployment.
          displayName: Grafana
          path: observability.grafana
        - description: DataSource defines the Grafana data source configuration.
          displayName: Grafana data source
          path: observability.grafana.dataSource
        - description: InstanceSelector defines the Grafana instance where the data
            source should be created.
          displayName: Instance Selector
          path: observability.grafana.dataSource.instanceSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana
        - description: Metrics defines the metric configuration of the Tempo deployment.
          displayName: Metrics
          path: observability.metrics
        - description: ServiceMonitors defines the PrometheusRule configuration.
          displayName: Prometheus Rules
          path: observability.metrics.prometheusRules
        - description: ServiceMonitors defines the ServiceMonitor configuration.
          displayName: Service Monitors
          path: observability.metrics.serviceMonitors
        - description: ServiceAccount defines the Service Account to use for all Tempo
            components.
          displayName: Service Account
          path: serviceAccount
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Traces defines the storage configuration for traces.
          displayName: Traces
          path: storage.traces
        - description: Azure defines the configuration for Azure Storage.
          displayName: Azure Storage
          path: storage.traces.azure
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.azure.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: GCP defines the configuration for Google Cloud Storage.
          displayName: Google Cloud Storage
          path: storage.traces.gcs
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.gcs.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: S3 defines the configuration for Amazon S3.
          displayName: Amazon S3
          path: storage.traces.s3
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.s3.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TLS defines the TLS configuration for Amazon S3.
          displayName: TLS
          path: storage.traces.s3.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.traces.s3.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.traces.s3.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.traces.s3.tls.minVersion
        - description: Tolerations defines the tolerations of a node to schedule the
            pod onto it.
          displayName: Tolerations
          path: tolerations
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        statusDescriptors:
        - description: Tempo is a map of the pod status of the Tempo pods.
          displayName: Tempo
          path: components.tempo
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: TempoStack manages a Tempo deployment in microservices mode.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: template.distributor.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Defines if the authentication will be enabled for jaeger UI.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.authentication.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - displayName: Extra Configurations
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: HashRing defines the spec for the distributed hash ring configuration.
          displayName: Hash Ring
          path: hashRing
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: MemberList configuration spec
          displayName: Memberlist Config
          path: hashRing.memberlist
        - description: EnableIPv6 enables IPv6 support for the memberlist based hash
            ring.
          displayName: Enable IPv6
          path: hashRing.memberlist.enableIPv6
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Grafana defines the Grafana configuration for operands.
          displayName: Grafana Config
          path: observability.grafana
        - description: CreateDatasource specifies if a Grafana Datasource should be
            created for Tempo.
          displayName: Create Datasource for Tempo
          path: observability.grafana.createDatasource
        - description: InstanceSelector specifies the Grafana instance where the datasource
            should be created.
          displayName: Create CreateDatasource for Tempo
          path: observability.grafana.instanceSelector
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: ReplicationFactor is used to define how many component replicas
            should exist.
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: Retention period defined by dataset. User can specify how long
            data should be stored.
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.tls.minVersion
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.compactor.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.distributor.resources
        - description: "TLS defines TLS configuration for distributor receivers \n
            If openshift feature flag `servingCertsService` is enabled and TLS is
            enabled but no certName or caName is specified, OpenShift service serving
            certificates will  be used."
          displayName: TLS
          path: template.distributor.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: template.distributor.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: template.distributor.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: template.distributor.tls.minVersion
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - displayName: Enabled
          path: template.gateway.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.gateway.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.ingester.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.querier.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuery defines options specific to the Jaeger Query component.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Authentication defines the options for the oauth proxy used
            to protect jaeger UI
          displayName: Jaeger UI authentication configuration
          path: template.queryFrontend.jaegerQuery.authentication
        - description: Resources defines the compute resource requirements of the
            OAuth Proxy container. The OAuth Proxy performs authentication and authorization
            of incoming requests to Jaeger UI when multi-tenancy is disabled.
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.authentication.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'SAR defines the SAR to be used in the oauth-proxy default
            is "{"namespace": "<tempo_stack_namespace>", "resource": "pods", "verb":
            "get"}'
          displayName: SAR
          path: template.queryFrontend.jaegerQuery.authentication.sar
        - description: Enabled defines if the Jaeger Query component should be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines the options for the Jaeger Query ingress.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: MonitorTab defines the monitor tab configuration.
          displayName: Jaeger Query UI Monitor Tab Settings
          path: template.queryFrontend.jaegerQuery.monitorTab
        - description: Enabled enables the monitor tab in the Jaeger console. The
            PrometheusEndpoint must be configured to enable this feature.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.monitorTab.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: PrometheusEndpoint defines the endpoint to the Prometheus instance
            that contains the span rate, error, and duration (RED) metrics. For instance
            on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
          displayName: Prometheus endpoint
          path: template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.resources
        - description: ServicesQueryDuration defines how long the services will be
            available in the services list
          displayName: ServicesQueryDuration
          path: template.queryFrontend.jaegerQuery.servicesQueryDuration
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Gateway
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      `TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.
      Please ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - tracing
    - monitoring
    - database
    - rhosdt
    - tempo
    - observability
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    minKubeVersion: 1.25.0
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3bdc1c83af9be6d9609db0ac660e339b7f44064e529f572fc3e1db8af704eeeb
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5b2ca060dff5d64979497bd8b7144f8e115763984f2ae7d1ddf6ef416d636508
  name: oauth_proxy
- image: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:08f5e521179e7c6e8b62372e280c4c1063578c864e3e7c6c40523a6373bd1896
  name: tempo_gateway_opa
- image: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:f04f2523f90a7d0f84f11907bb40bf24e28628acc023e3a19ed35c83cb707719
  name: tempo_gateway
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:ad1da7f9941a2a887431da733bf7e59ef931ea281cf6c36da49fb1dc1a4c4cfc
  name: ""
- image: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:449150a62412d83df190c2f67a66967ddf424acd0e7b14e992ad9799e736a7fa
  name: tempo_query
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:00a37371aef28f7cd5273deb8597ee88573b7d01a6bd048c2a155c5021d9d0dc
  name: tempo-rhel8-operator-00a37371aef28f7cd5273deb8597ee88573b7d01a6bd048c2a155c5021d9d0dc-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:00a37371aef28f7cd5273deb8597ee88573b7d01a6bd048c2a155c5021d9d0dc
  name: manager
- image: registry.redhat.io/rhosdt/tempo-rhel8@sha256:cfa1045be882e55a3b785348572f2adfc476882bedcc0df0afa3b6e8c5037991
  name: tempo
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:c5d81042ce8d2f6e65b2092fb1ccbe45a2845990b54a5a2454bbf8c1eebbf2eb
name: tempo-operator.v0.13.0-1-0.1730817419.p
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoMonolithic
    version: v1alpha1
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.13.0-1+0.1730817419.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoMonolithic",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "jaegerui": {
                "enabled": true,
                "resources": {
                  "limits": {
                    "cpu": "2",
                    "memory": "2Gi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                }
              },
              "storage": {
                "traces": {
                  "backend": "memory"
                }
              }
            }
          },
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storage": {
                "secret": {
                  "name": "my-storage-secret",
                  "type": "s3"
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true,
                    "ingress": {
                      "type": "route"
                    }
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing,Monitoring
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:b4160353a99b6beac58c8ad21c1fedc518e9500b2c2188cc9eba7b92ddf399b4
      createdAt: "2024-08-28 14:01:06.880923"
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "true"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=0.6.0 <0.13.0-1'
      olm.substitutesFor: tempo-operator.v0.13.0-1
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        displayName: TempoMonolithic
        kind: TempoMonolithic
        name: tempomonolithics.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: 'Enabled defines if OTLP over gRPC is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.grpc.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.grpc.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: 'Enabled defines if OTLP over HTTP is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.http.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.http.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Defines if the authentication will be enabled for jaeger UI.
          displayName: Enabled
          path: jaegerui.authentication.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if the Jaeger UI component should be created.
          displayName: Enabled
          path: jaegerui.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if an Ingress object should be created for
            Jaeger UI.
          displayName: Enabled
          path: jaegerui.ingress.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Route object should be created for Jaeger
            UI.
          displayName: Enabled
          path: jaegerui.route.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Grafana data source should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.grafana.dataSource.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if PrometheusRule objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.prometheusRules.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if ServiceMonitor objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.serviceMonitors.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Storage defines the storage configuration.
          displayName: Storage
          path: storage
        - description: 'Backend defines the backend for storing traces. Default: memory.'
          displayName: Storage Backend
          path: storage.traces.backend
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.traces.s3.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingestion defines the trace ingestion configuration.
          displayName: Ingestion
          path: ingestion
        - description: Resources defines the compute resource requirements of the
            Jaeger UI container.
          displayName: Resources
          path: jaegerui.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'Size defines the size of the volume where traces are stored.
            For in-memory storage, this defines the size of the tmpfs volume. For
            persistent volume storage, this defines the size of the persistent volume.
            For object storage, this defines the size of the persistent volume containing
            the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for
            all other backends.'
          displayName: Size
          path: storage.traces.size
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: JaegerUI defines the Jaeger UI configuration.
          displayName: Jaeger UI
          path: jaegerui
        - description: Ingress defines the Ingress configuration for the Jaeger UI.
          displayName: Ingress
          path: jaegerui.ingress
        - description: Route defines the OpenShift route configuration for the Jaeger
            UI.
          displayName: Route
          path: jaegerui.route
        - description: Observability defines the observability configuration of the
            Tempo deployment.
          displayName: Observability
          path: observability
        - description: Authentication defines the options for the oauth proxy used
            to protect jaeger UI
          displayName: Jaeger UI authentication configuration
          path: jaegerui.authentication
        - description: Resources defines the compute resource requirements of the
            Tempo container.
          displayName: Resources
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Affinity defines the Affinity rules for scheduling pods.
          displayName: Affinity
          path: affinity
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: ExtraConfig defines any extra (overlay) configuration of components.
          displayName: Extra Configuration
          path: extraConfig
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: OTLP defines the ingestion configuration for the OTLP protocol.
          displayName: OTLP
          path: ingestion.otlp
        - description: GRPC defines the OTLP over gRPC configuration.
          displayName: gRPC
          path: ingestion.otlp.grpc
        - description: "TLS defines the TLS configuration for OTLP/gRPC ingestion.
            \n On OpenShift when operator config `servingCertsService`  and TLS is
            enabled  but no `certName` and `caName` are provided it will use OpenShift
            serving certificate service."
          displayName: TLS
          path: ingestion.otlp.grpc.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.grpc.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.grpc.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.grpc.tls.minVersion
        - description: HTTP defines the OTLP over HTTP configuration.
          displayName: HTTP
          path: ingestion.otlp.http
        - description: "TLS defines the TLS configuration for OTLP/HTTP ingestion.
            \n On OpenShift when operator config `servingCertsService`  and TLS is
            enabled  but no `certName` and `caName` are provided it will use OpenShift
            serving certificate service."
          displayName: TLS
          path: ingestion.otlp.http.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.http.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.http.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.http.tls.minVersion
        - description: Resources defines the compute resource requirements of the
            OAuth Proxy container. The OAuth Proxy performs authentication and authorization
            of incoming requests to Jaeger UI when multi-tenancy is disabled.
          displayName: Resources
          path: jaegerui.authentication.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'SAR defines the SAR to be used in the oauth-proxy default
            is "{"namespace": "<tempo_stack_namespace>", "resource": "pods", "verb":
            "get"}'
          displayName: SAR
          path: jaegerui.authentication.sar
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: jaegerui.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Hostname
          path: jaegerui.ingress.host
        - description: IngressClassName defines the name of an IngressClass cluster
            resource. Defines which ingress controller serves this ingress resource.
          displayName: Ingress Class Name
          path: jaegerui.ingress.ingressClassName
        - description: Annotations defines the annotations of the Route object.
          displayName: Annotations
          path: jaegerui.route.annotations
        - description: Host defines the hostname of the Route object.
          displayName: Hostname
          path: jaegerui.route.host
        - description: Termination specifies the termination type.
          displayName: TLS Termination
          path: jaegerui.route.termination
        - description: ServicesQueryDuration defines how long the services will be
            available in the services list
          displayName: ServicesQueryDuration
          path: jaegerui.servicesQueryDuration
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: 'ManagementState defines whether this instance is managed by
            the operator or self-managed. Default: Managed.'
          displayName: Management State
          path: management
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Multitenancy defines the multi-tenancy configuration.
          displayName: Multi-Tenancy
          path: multitenancy
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: multitenancy.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: multitenancy.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: multitenancy.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: multitenancy.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: multitenancy.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: multitenancy.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: multitenancy.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: multitenancy.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: multitenancy.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: multitenancy.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: multitenancy.authorization.roles
        - description: Enabled defines if multi-tenancy is enabled.
          displayName: Enabled
          path: multitenancy.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: multitenancy.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        - description: Resources defines the compute resource requirements of the
            gateway container. The gateway performs authentication and authorization
            of incoming requests when multi-tenancy is enabled.
          displayName: Resources
          path: multitenancy.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: NodeSelector defines which labels are required by a node to
            schedule the pod onto it.
          displayName: Node Selector
          path: nodeSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Grafana defines the Grafana configuration of the Tempo deployment.
          displayName: Grafana
          path: observability.grafana
        - description: DataSource defines the Grafana data source configuration.
          displayName: Grafana data source
          path: observability.grafana.dataSource
        - description: InstanceSelector defines the Grafana instance where the data
            source should be created.
          displayName: Instance Selector
          path: observability.grafana.dataSource.instanceSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana
        - description: Metrics defines the metric configuration of the Tempo deployment.
          displayName: Metrics
          path: observability.metrics
        - description: ServiceMonitors defines the PrometheusRule configuration.
          displayName: Prometheus Rules
          path: observability.metrics.prometheusRules
        - description: ServiceMonitors defines the ServiceMonitor configuration.
          displayName: Service Monitors
          path: observability.metrics.serviceMonitors
        - description: ServiceAccount defines the Service Account to use for all Tempo
            components.
          displayName: Service Account
          path: serviceAccount
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Traces defines the storage configuration for traces.
          displayName: Traces
          path: storage.traces
        - description: Azure defines the configuration for Azure Storage.
          displayName: Azure Storage
          path: storage.traces.azure
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.azure.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: GCP defines the configuration for Google Cloud Storage.
          displayName: Google Cloud Storage
          path: storage.traces.gcs
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.gcs.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: S3 defines the configuration for Amazon S3.
          displayName: Amazon S3
          path: storage.traces.s3
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.s3.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TLS defines the TLS configuration for Amazon S3.
          displayName: TLS
          path: storage.traces.s3.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.traces.s3.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.traces.s3.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.traces.s3.tls.minVersion
        - description: Tolerations defines the tolerations of a node to schedule the
            pod onto it.
          displayName: Tolerations
          path: tolerations
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        statusDescriptors:
        - description: Tempo is a map of the pod status of the Tempo pods.
          displayName: Tempo
          path: components.tempo
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: TempoStack manages a Tempo deployment in microservices mode.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: template.distributor.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Defines if the authentication will be enabled for jaeger UI.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.authentication.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - displayName: Extra Configurations
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: HashRing defines the spec for the distributed hash ring configuration.
          displayName: Hash Ring
          path: hashRing
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: MemberList configuration spec
          displayName: Memberlist Config
          path: hashRing.memberlist
        - description: EnableIPv6 enables IPv6 support for the memberlist based hash
            ring.
          displayName: Enable IPv6
          path: hashRing.memberlist.enableIPv6
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Grafana defines the Grafana configuration for operands.
          displayName: Grafana Config
          path: observability.grafana
        - description: CreateDatasource specifies if a Grafana Datasource should be
            created for Tempo.
          displayName: Create Datasource for Tempo
          path: observability.grafana.createDatasource
        - description: InstanceSelector specifies the Grafana instance where the datasource
            should be created.
          displayName: Create CreateDatasource for Tempo
          path: observability.grafana.instanceSelector
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: ReplicationFactor is used to define how many component replicas
            should exist.
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: Retention period defined by dataset. User can specify how long
            data should be stored.
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.tls.minVersion
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.compactor.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.distributor.resources
        - description: "TLS defines TLS configuration for distributor receivers \n
            If openshift feature flag `servingCertsService` is enabled and TLS is
            enabled but no certName or caName is specified, OpenShift service serving
            certificates will  be used."
          displayName: TLS
          path: template.distributor.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: template.distributor.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: template.distributor.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: template.distributor.tls.minVersion
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - displayName: Enabled
          path: template.gateway.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.gateway.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.ingester.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.querier.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuery defines options specific to the Jaeger Query component.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Authentication defines the options for the oauth proxy used
            to protect jaeger UI
          displayName: Jaeger UI authentication configuration
          path: template.queryFrontend.jaegerQuery.authentication
        - description: Resources defines the compute resource requirements of the
            OAuth Proxy container. The OAuth Proxy performs authentication and authorization
            of incoming requests to Jaeger UI when multi-tenancy is disabled.
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.authentication.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'SAR defines the SAR to be used in the oauth-proxy default
            is "{"namespace": "<tempo_stack_namespace>", "resource": "pods", "verb":
            "get"}'
          displayName: SAR
          path: template.queryFrontend.jaegerQuery.authentication.sar
        - description: Enabled defines if the Jaeger Query component should be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines the options for the Jaeger Query ingress.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: MonitorTab defines the monitor tab configuration.
          displayName: Jaeger Query UI Monitor Tab Settings
          path: template.queryFrontend.jaegerQuery.monitorTab
        - description: Enabled enables the monitor tab in the Jaeger console. The
            PrometheusEndpoint must be configured to enable this feature.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.monitorTab.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: PrometheusEndpoint defines the endpoint to the Prometheus instance
            that contains the span rate, error, and duration (RED) metrics. For instance
            on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
          displayName: Prometheus endpoint
          path: template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.resources
        - description: ServicesQueryDuration defines how long the services will be
            available in the services list
          displayName: ServicesQueryDuration
          path: template.queryFrontend.jaegerQuery.servicesQueryDuration
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Gateway
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      `TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.
      Please ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - tracing
    - monitoring
    - database
    - rhosdt
    - tempo
    - observability
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    minKubeVersion: 1.25.0
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3bdc1c83af9be6d9609db0ac660e339b7f44064e529f572fc3e1db8af704eeeb
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5b2ca060dff5d64979497bd8b7144f8e115763984f2ae7d1ddf6ef416d636508
  name: oauth_proxy
- image: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:0aeb1652a4784dccb03cebff626d461ccb04331a0c74acacca7051786094fd74
  name: tempo_gateway_opa
- image: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:9e2744c07c402e6f9314ffadacaee8bede124181b5f2b97ad8e9311bf39ec182
  name: tempo_gateway
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:c5d81042ce8d2f6e65b2092fb1ccbe45a2845990b54a5a2454bbf8c1eebbf2eb
  name: ""
- image: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:40cc7cda239f7df93df655134e827d89c52fcae4ece2f1e9a9d404adceaa72af
  name: tempo_query
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:b4160353a99b6beac58c8ad21c1fedc518e9500b2c2188cc9eba7b92ddf399b4
  name: tempo-rhel8-operator-b4160353a99b6beac58c8ad21c1fedc518e9500b2c2188cc9eba7b92ddf399b4-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:b4160353a99b6beac58c8ad21c1fedc518e9500b2c2188cc9eba7b92ddf399b4
  name: manager
- image: registry.redhat.io/rhosdt/tempo-rhel8@sha256:bcd9aceb63d3a328855a2924810fb67e0c8dd36fc42dd79131c141865d076907
  name: tempo
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:fdda4edf9468619d63c6356a4dd27ae85eb4153b5b8c84ed0a629452364246c4
name: tempo-operator.v0.14.1-1
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoMonolithic
    version: v1alpha1
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.14.1-1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoMonolithic",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "jaegerui": {
                "enabled": true,
                "resources": {
                  "limits": {
                    "cpu": "2",
                    "memory": "2Gi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                }
              },
              "storage": {
                "traces": {
                  "backend": "memory"
                }
              }
            }
          },
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storage": {
                "secret": {
                  "name": "my-storage-secret",
                  "type": "s3"
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true,
                    "ingress": {
                      "type": "route"
                    }
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing,Monitoring
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:ec549ea21d5506a102a3375df68d1b0d6315aeec3de605bfc9a17aa54ac373b1
      createdAt: 22 Nov 2024, 12:58
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "true"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=0.6.0 <0.14.1-1'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        displayName: TempoMonolithic
        kind: TempoMonolithic
        name: tempomonolithics.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: 'Enabled defines if OTLP over gRPC is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.grpc.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.grpc.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: 'Enabled defines if OTLP over HTTP is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.http.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.http.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Defines if the authentication will be enabled for jaeger UI.
          displayName: Enabled
          path: jaegerui.authentication.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if the Jaeger UI component should be created.
          displayName: Enabled
          path: jaegerui.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if an Ingress object should be created for
            Jaeger UI.
          displayName: Enabled
          path: jaegerui.ingress.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Route object should be created for Jaeger
            UI.
          displayName: Enabled
          path: jaegerui.route.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if a Grafana data source should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.grafana.dataSource.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if PrometheusRule objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.prometheusRules.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if ServiceMonitor objects should be created
            for this Tempo deployment.
          displayName: Enabled
          path: observability.metrics.serviceMonitors.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Storage defines the storage configuration.
          displayName: Storage
          path: storage
        - description: 'Backend defines the backend for storing traces. Default: memory.'
          displayName: Storage Backend
          path: storage.traces.backend
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.traces.s3.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingestion defines the trace ingestion configuration.
          displayName: Ingestion
          path: ingestion
        - description: Resources defines the compute resource requirements of the
            Jaeger UI container.
          displayName: Resources
          path: jaegerui.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'Size defines the size of the volume where traces are stored.
            For in-memory storage, this defines the size of the tmpfs volume. For
            persistent volume storage, this defines the size of the persistent volume.
            For object storage, this defines the size of the persistent volume containing
            the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for
            all other backends.'
          displayName: Size
          path: storage.traces.size
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: JaegerUI defines the Jaeger UI configuration.
          displayName: Jaeger UI
          path: jaegerui
        - description: Ingress defines the Ingress configuration for the Jaeger UI.
          displayName: Ingress
          path: jaegerui.ingress
        - description: Route defines the OpenShift route configuration for the Jaeger
            UI.
          displayName: Route
          path: jaegerui.route
        - description: Observability defines the observability configuration of the
            Tempo deployment.
          displayName: Observability
          path: observability
        - description: Authentication defines the options for the oauth proxy used
            to protect jaeger UI
          displayName: Jaeger UI authentication configuration
          path: jaegerui.authentication
        - description: Resources defines the compute resource requirements of the
            Tempo container.
          displayName: Resources
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Affinity defines the Affinity rules for scheduling pods.
          displayName: Affinity
          path: affinity
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: ExtraConfig defines any extra (overlay) configuration of components.
          displayName: Extra Configuration
          path: extraConfig
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: OTLP defines the ingestion configuration for the OTLP protocol.
          displayName: OTLP
          path: ingestion.otlp
        - description: GRPC defines the OTLP over gRPC configuration.
          displayName: gRPC
          path: ingestion.otlp.grpc
        - description: "TLS defines the TLS configuration for OTLP/gRPC ingestion.
            \n On OpenShift when operator config `servingCertsService`  and TLS is
            enabled  but no `certName` and `caName` are provided it will use OpenShift
            serving certificate service."
          displayName: TLS
          path: ingestion.otlp.grpc.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.grpc.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.grpc.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.grpc.tls.minVersion
        - description: HTTP defines the OTLP over HTTP configuration.
          displayName: HTTP
          path: ingestion.otlp.http
        - description: "TLS defines the TLS configuration for OTLP/HTTP ingestion.
            \n On OpenShift when operator config `servingCertsService`  and TLS is
            enabled  but no `certName` and `caName` are provided it will use OpenShift
            serving certificate service."
          displayName: TLS
          path: ingestion.otlp.http.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.http.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.http.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.http.tls.minVersion
        - description: Resources defines the compute resource requirements of the
            OAuth Proxy container. The OAuth Proxy performs authentication and authorization
            of incoming requests to Jaeger UI when multi-tenancy is disabled.
          displayName: Resources
          path: jaegerui.authentication.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'SAR defines the SAR to be used in the oauth-proxy default
            is "{"namespace": "<tempo_stack_namespace>", "resource": "pods", "verb":
            "get"}'
          displayName: SAR
          path: jaegerui.authentication.sar
        - description: 'FindTracesConcurrentRequests defines how many concurrent request
            a single trace search can submit (defaults 2). The search for traces in
            Jaeger submits limit+1 requests. First requests finds trace IDs and then
            it fetches entire traces by ID. This property allows Jaeger to fetch traces
            in parallel. Note that by default a single Tempo querier can process 20
            concurrent search jobs. Increasing this property might require scaling
            up querier instances, especially on error "job queue full" See also Tempo''s
            extraConfig: querier.max_concurrent_queries (20 default) query_frontend.max_outstanding_per_tenant:
            (2000 default). Increase if the query-frontend returns 429'
          displayName: FindTracesConcurrentRequests
          path: jaegerui.findTracesConcurrentRequests
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: jaegerui.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Hostname
          path: jaegerui.ingress.host
        - description: IngressClassName defines the name of an IngressClass cluster
            resource. Defines which ingress controller serves this ingress resource.
          displayName: Ingress Class Name
          path: jaegerui.ingress.ingressClassName
        - description: Annotations defines the annotations of the Route object.
          displayName: Annotations
          path: jaegerui.route.annotations
        - description: Host defines the hostname of the Route object.
          displayName: Hostname
          path: jaegerui.route.host
        - description: Termination specifies the termination type.
          displayName: TLS Termination
          path: jaegerui.route.termination
        - description: ServicesQueryDuration defines how long the services will be
            available in the services list
          displayName: ServicesQueryDuration
          path: jaegerui.servicesQueryDuration
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: 'ManagementState defines whether this instance is managed by
            the operator or self-managed. Default: Managed.'
          displayName: Management State
          path: management
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Multitenancy defines the multi-tenancy configuration.
          displayName: Multi-Tenancy
          path: multitenancy
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: multitenancy.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: multitenancy.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: multitenancy.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: multitenancy.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: multitenancy.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: multitenancy.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: multitenancy.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: multitenancy.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: multitenancy.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: multitenancy.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: multitenancy.authorization.roles
        - description: Enabled defines if multi-tenancy is enabled.
          displayName: Enabled
          path: multitenancy.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: multitenancy.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        - description: Resources defines the compute resource requirements of the
            gateway container. The gateway performs authentication and authorization
            of incoming requests when multi-tenancy is enabled.
          displayName: Resources
          path: multitenancy.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: NodeSelector defines which labels are required by a node to
            schedule the pod onto it.
          displayName: Node Selector
          path: nodeSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Grafana defines the Grafana configuration of the Tempo deployment.
          displayName: Grafana
          path: observability.grafana
        - description: DataSource defines the Grafana data source configuration.
          displayName: Grafana data source
          path: observability.grafana.dataSource
        - description: InstanceSelector defines the Grafana instance where the data
            source should be created.
          displayName: Instance Selector
          path: observability.grafana.dataSource.instanceSelector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana
        - description: Metrics defines the metric configuration of the Tempo deployment.
          displayName: Metrics
          path: observability.metrics
        - description: ServiceMonitors defines the PrometheusRule configuration.
          displayName: Prometheus Rules
          path: observability.metrics.prometheusRules
        - description: ServiceMonitors defines the ServiceMonitor configuration.
          displayName: Service Monitors
          path: observability.metrics.serviceMonitors
        - description: ServiceAccount defines the Service Account to use for all Tempo
            components.
          displayName: Service Account
          path: serviceAccount
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Traces defines the storage configuration for traces.
          displayName: Traces
          path: storage.traces
        - description: Azure defines the configuration for Azure Storage.
          displayName: Azure Storage
          path: storage.traces.azure
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.azure.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: GCP defines the configuration for Google Cloud Storage.
          displayName: Google Cloud Storage
          path: storage.traces.gcs
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.gcs.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: S3 defines the configuration for Amazon S3.
          displayName: Amazon S3
          path: storage.traces.s3
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.s3.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TLS defines the TLS configuration for Amazon S3.
          displayName: TLS
          path: storage.traces.s3.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.traces.s3.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.traces.s3.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.traces.s3.tls.minVersion
        - description: Tolerations defines the tolerations of a node to schedule the
            pod onto it.
          displayName: Tolerations
          path: tolerations
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        statusDescriptors:
        - description: Tempo is a map of the pod status of the Tempo pods.
          displayName: Tempo
          path: components.tempo
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: TempoStack manages a Tempo deployment in microservices mode.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: template.distributor.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Defines if the authentication will be enabled for jaeger UI.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.authentication.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - displayName: Extra Configurations
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: HashRing defines the spec for the distributed hash ring configuration.
          displayName: Hash Ring
          path: hashRing
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: MemberList configuration spec
          displayName: Memberlist Config
          path: hashRing.memberlist
        - description: EnableIPv6 enables IPv6 support for the memberlist based hash
            ring.
          displayName: Enable IPv6
          path: hashRing.memberlist.enableIPv6
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: InstanceAddrType defines the type of address to use to advertise
            to the ring. Defaults to the first address from any private network interfaces
            of the current pod. Alternatively the public pod IP can be used in case
            private networks (RFC 1918 and RFC 6598) are not available.
          displayName: Instance Address
          path: hashRing.memberlist.instanceAddrType
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:default
          - urn:alm:descriptor:com.tectonic.ui:select:podIP
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Grafana defines the Grafana configuration for operands.
          displayName: Grafana Config
          path: observability.grafana
        - description: CreateDatasource specifies if a Grafana Datasource should be
            created for Tempo.
          displayName: Create Datasource for Tempo
          path: observability.grafana.createDatasource
        - description: InstanceSelector specifies the Grafana instance where the datasource
            should be created.
          displayName: Create CreateDatasource for Tempo
          path: observability.grafana.instanceSelector
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: The replication factor is a configuration setting that determines
            how many ingesters need to acknowledge the data from the distributors
            before accepting a span.
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: Retention period defined by dataset. User can specify how long
            data should be stored.
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.tls.minVersion
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: PodSecurityContext defines security context will be applied
            to all pods of this component.
          displayName: PodSecurityContext
          path: template.compactor.podSecurityContext
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.compactor.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: PodSecurityContext defines security context will be applied
            to all pods of this component.
          displayName: PodSecurityContext
          path: template.distributor.podSecurityContext
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.distributor.resources
        - description: "TLS defines TLS configuration for distributor receivers \n
            If openshift feature flag `servingCertsService` is enabled and TLS is
            enabled but no certName or caName is specified, OpenShift service serving
            certificates will  be used."
          displayName: TLS
          path: template.distributor.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: template.distributor.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: template.distributor.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: template.distributor.tls.minVersion
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - displayName: Enabled
          path: template.gateway.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: PodSecurityContext defines security context will be applied
            to all pods of this component.
          displayName: PodSecurityContext
          path: template.gateway.podSecurityContext
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.gateway.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: PodSecurityContext defines security context will be applied
            to all pods of this component.
          displayName: PodSecurityContext
          path: template.ingester.podSecurityContext
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.ingester.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: PodSecurityContext defines security context will be applied
            to all pods of this component.
          displayName: PodSecurityContext
          path: template.querier.podSecurityContext
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.querier.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuery defines options specific to the Jaeger Query component.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Authentication defines the options for the oauth proxy used
            to protect jaeger UI
          displayName: Jaeger UI authentication configuration
          path: template.queryFrontend.jaegerQuery.authentication
        - description: Resources defines the compute resource requirements of the
            OAuth Proxy container. The OAuth Proxy performs authentication and authorization
            of incoming requests to Jaeger UI when multi-tenancy is disabled.
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.authentication.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: 'SAR defines the SAR to be used in the oauth-proxy default
            is "{"namespace": "<tempo_stack_namespace>", "resource": "pods", "verb":
            "get"}'
          displayName: SAR
          path: template.queryFrontend.jaegerQuery.authentication.sar
        - description: Enabled defines if the Jaeger Query component should be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: 'FindTracesConcurrentRequests defines how many concurrent request
            a single trace search can submit (defaults querier.replicas*2). The search
            for traces in Jaeger submits limit+1 requests. First requests finds trace
            IDs and then it fetches entire traces by ID. This property allows Jaeger
            to fetch traces in parallel. Note that by default a single Tempo querier
            can process 20 concurrent search jobs. Increasing this property might
            require scaling up querier instances, especially on error "job queue full"
            See also Tempo''s extraConfig: querier.max_concurrent_queries (20 default)
            query_frontend.max_outstanding_per_tenant: (2000 default). Increase if
            the query-frontend returns 429'
          displayName: FindTracesConcurrentRequests
          path: template.queryFrontend.jaegerQuery.findTracesConcurrentRequests
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: Ingress defines the options for the Jaeger Query ingress.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: MonitorTab defines the monitor tab configuration.
          displayName: Jaeger Query UI Monitor Tab Settings
          path: template.queryFrontend.jaegerQuery.monitorTab
        - description: Enabled enables the monitor tab in the Jaeger console. The
            PrometheusEndpoint must be configured to enable this feature.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.monitorTab.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: PrometheusEndpoint defines the endpoint to the Prometheus instance
            that contains the span rate, error, and duration (RED) metrics. For instance
            on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
          displayName: Prometheus endpoint
          path: template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint
        - description: REDMetricsNamespace defines the a prefix used retrieve span
            rate, error, and duration (RED) metrics. By default it is set to `traces.span.metrics`
            following the default namespace of the OpenTelemetry Collector since Version
            0.109.0.
          displayName: RED Metric Namespace
          path: template.queryFrontend.jaegerQuery.monitorTab.redMetricsNamespace
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.resources
        - description: ServicesQueryDuration defines how long the services will be
            available in the services list
          displayName: ServicesQueryDuration
          path: template.queryFrontend.jaegerQuery.servicesQueryDuration
        - description: TempoQuery defines options specific to the Tempoo Query component.
          displayName: Tempo Query Settings
          path: template.queryFrontend.jaegerQuery.tempoQuery
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.jaegerQuery.tempoQuery.resources
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: PodSecurityContext defines security context will be applied
            to all pods of this component.
          displayName: PodSecurityContext
          path: template.queryFrontend.podSecurityContext
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Resources defines resources for this component, this will override
            the calculated resources derived from total
          displayName: Resources
          path: template.queryFrontend.resources
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines a universally unique identifier of the tenant.
            Unlike the tenantName, which must be unique at a given time, the tenantId
            must be unique over the entire lifetime of the Tempo deployment. Tempo
            uses this ID to prefix objects in the object storage.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines a human readable, unique name of the tenant.
            The value of this field must be specified in the X-Scope-OrgID header
            and in the resources field of a ClusterRole to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Gateway
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades** - Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      `TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.
      Please ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription.
      Checking the [Red Hat Documentation](https://docs.redhat.com/en/documentation/openshift_container_platform/4.17/html/distributed_tracing/distributed-tracing-platform-tempo) is recommended when installing, configuring, and managing the Operator and instances.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - tempo
    - tracing
    - observability
    - monitoring
    - database
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: support@redhat.com
      name: Red Hat support
    maturity: alpha
    minKubeVersion: 1.25.0
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:fdda4edf9468619d63c6356a4dd27ae85eb4153b5b8c84ed0a629452364246c4
  name: ""
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:latest@sha256:7efeeb8b29872a6f0271f651d7ae02c91daea16d853c50e374c310f044d8c76c
  name: ose-kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-oauth-proxy:latest@sha256:234af927030921ab8f7333f61f967b4b4dee37a1b3cf85689e9e63240dd62800
  name: ose-oauth-proxy
- image: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:9d0ec4614403bcc49f24f51845b02afa2b04f6108fb73664dbbb8c8f348c2737
  name: gateway-opa
- image: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:ca549f05f374f72efe25ad8ff6062219bf7f7a1f5e78b989326a4ee8dd6570d3
  name: gateway
- image: registry.redhat.io/rhosdt/tempo-jaeger-query-rhel8@sha256:6b85129262bb4694360c06300ca91d804c6a468a8d05a12e890248278dfd2120
  name: jaeger-query
- image: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:7c1645b2bb8a9146b6b7eedd16098c9cc09d5b39f3ba9e6b3172ce7d3d703b8f
  name: tempo-query
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:ec549ea21d5506a102a3375df68d1b0d6315aeec3de605bfc9a17aa54ac373b1
  name: operator
- image: registry.redhat.io/rhosdt/tempo-rhel8@sha256:33ec912ccf0794fe1c0bfb908651952e1ae7f66545b5067122a952c53db7d847
  name: tempo
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:b6ec1460415bf8c69d82cf9267494dc5445242b6a0957318eae5bf333693cb2e
name: tempo-operator.v0.3.1-3
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.3.1-3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:f523b907748b862db01fb223833e1d1ce648ebefcad1c180c8bfce4335ae6af4
      createdAt: "2023-10-27 13:47:52.362768"
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoStack is the spec for Tempo deployments.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: 'NOTE: currently this field is not considered. ReplicationFactor
            is used to define how many component replicas should exist.'
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: 'NOTE: currently this field is not considered. Retention period
            defined by dataset. User can specify how long data should be stored.'
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are “s”, “m” and “h”. example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are “s”, “m” and “h”. example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the tempo TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate.
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap Name
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines OpenShift Route specific options.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination specifies the termination type. By default "edge"
            is used.
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuerySpec defines Jaeger Query specific options.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Enabled is used to define if Jaeger Query component should
            be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
        - description: Ingress defines Jaeger Query Ingress options.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines OpenShift Route specific options.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination specifies the termination type. By default "edge"
            is used.
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines the id of the tenant.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines the name of the tenant. The value of this
            field should be sent in X-Scope-OrgID header to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:dynamic
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator manages Tempo deployments in Microservices mode.

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      Make that your system has a S3 compatible storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription. This operator is at the moment in Technology Preview Support Scope.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - tracing
    - monitoring
    - database
    - observability
    - tempo
    - rhosdt
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1dddb0988d1612c996707d43eb839bc49fc7e7554afaf085436eeddb37a12438
  name: kube-rbac-proxy
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:b6ec1460415bf8c69d82cf9267494dc5445242b6a0957318eae5bf333693cb2e
  name: ""
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:f523b907748b862db01fb223833e1d1ce648ebefcad1c180c8bfce4335ae6af4
  name: tempo-rhel8-operator-f523b907748b862db01fb223833e1d1ce648ebefcad1c180c8bfce4335ae6af4-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:f523b907748b862db01fb223833e1d1ce648ebefcad1c180c8bfce4335ae6af4
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:d3d446b9adaebd3985fb8d78176100156d9133ec2cf956d92e07c3651e60cc3d
name: tempo-operator.v0.6.0-2
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.6.0-2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storage": {
                "secret": {
                  "name": "my-storage-secret",
                  "type": "s3"
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true,
                    "ingress": {
                      "type": "route"
                    }
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing,Monitoring
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0c82b627f5706657f224db3f7ddfd9065e1ef54f7249e4cb0387d67db6cf0376
      createdAt: "2023-11-27 14:14:16.411616"
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "false"
      features.operators.openshift.io/tls-profiles: "true"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoStack is the spec for Tempo deployments.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: 'NOTE: currently this field is not considered. ReplicationFactor
            is used to define how many component replicas should exist.'
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: 'NOTE: currently this field is not considered. Retention period
            defined by dataset. User can specify how long data should be stored.'
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a `ca.crt` key with
            a CA certificate. It needs to be in the same namespace as the TempoStack
            custom resource.
          displayName: CA ConfigMap Name
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: TLS defines TLS configuration for distributor receivers
          displayName: TLS
          path: template.distributor.tls
        - description: caName is the name of a ConfigMap containing a CA certificate.
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap Name
          path: template.distributor.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: certName is the name of a Secret containing a certificate and
            the private key It needs to be in the same namespace as the Tempo custom
            resource.
          displayName: Certificate Secret Name
          path: template.distributor.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: minVersion is the name of a Secret containing a certificate
            and the private key It needs to be in the same namespace as the Tempo
            custom resource.
          displayName: Min TLS Version
          path: template.distributor.tls.minVersion
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines OpenShift Route specific options.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination specifies the termination type. By default "edge"
            is used.
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuerySpec defines Jaeger Query specific options.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Enabled is used to define if Jaeger Query component should
            be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
        - description: Ingress defines Jaeger Query Ingress options.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines OpenShift Route specific options.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination specifies the termination type. By default "edge"
            is used.
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: MonitorTab defines monitor tab configuration.
          displayName: Jaeger Query UI Monitor Tab Settings
          path: template.queryFrontend.jaegerQuery.monitorTab
        - description: Enabled enables monitoring tab in Jaeger console. PrometheusEndpoint
            needs to be set to enable the feature.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.monitorTab.enabled
        - description: PrometheusEndpoint configures endpoint to the Prometheus that
            contains span RED metrics. For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
          displayName: Prometheus endpoint
          path: template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint
        - description: NodeSelector is the simplest recommended form of node selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas represents the number of replicas to create for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Tolerations defines component specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines the id of the tenant.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines the name of the tenant. The value of this
            field should be sent in X-Scope-OrgID header to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator manages Tempo deployments in Microservices mode.

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      Make that your system has a S3 compatible storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - monitoring
    - tempo
    - observability
    - rhosdt
    - tracing
    - database
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:97cade2c1ee468261aec5400728c8d44de387b459134aec7a4c3b5ec5a335d2c
  name: kube-rbac-proxy
- image: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:1aa743403eccc0a6e6b7065ee2f54330cc0cf27b085d64cfd750f6505928f7c1
  name: tempo_gateway_opa
- image: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:131f5ec8d1b290ee2b485eb57d5170fb46d66d5dfd7c8e52c5e346648ab2ae9e
  name: tempo_gateway
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:d3d446b9adaebd3985fb8d78176100156d9133ec2cf956d92e07c3651e60cc3d
  name: ""
- image: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:5402f3af7bdee45bb3d514ed1054cdc2fb9475f6ca33ab513d226a3bd1bc46b9
  name: tempo_query
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0c82b627f5706657f224db3f7ddfd9065e1ef54f7249e4cb0387d67db6cf0376
  name: tempo-rhel8-operator-0c82b627f5706657f224db3f7ddfd9065e1ef54f7249e4cb0387d67db6cf0376-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0c82b627f5706657f224db3f7ddfd9065e1ef54f7249e4cb0387d67db6cf0376
  name: manager
- image: registry.redhat.io/rhosdt/tempo-rhel8@sha256:d0a526c0721596880eef4f38ef772ec7a914364cdc7165eaa35f6ba4068a5e7a
  name: tempo
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:153aea091df302b13f4c59ed8810ed6b9ecb850f43cf94d970ce24e6a1335499
name: tempo-operator.v0.8.0-2
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoMonolithic
    version: v1alpha1
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.8.0-2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoMonolithic",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "jaegerui": {
                "enabled": true,
                "resources": {
                  "limits": {
                    "cpu": "2",
                    "memory": "2Gi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                }
              },
              "storage": {
                "traces": {
                  "backend": "memory"
                }
              }
            }
          },
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storage": {
                "secret": {
                  "name": "my-storage-secret",
                  "type": "s3"
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true,
                    "ingress": {
                      "type": "route"
                    }
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing,Monitoring
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:77e4a81f5573f6fe5de65c70cd84598a3bfe0263efde84274ae3464481a2cc28
      createdAt: "2024-02-06 17:45:34.278174"
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "true"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        displayName: TempoMonolithic
        kind: TempoMonolithic
        name: tempomonolithics.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: ExtraConfig defines any extra (overlay) configuration of components.
          displayName: Extra Configuration
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: Ingestion defines the trace ingestion configuration.
          displayName: Ingestion
          path: ingestion
        - description: OTLP defines the ingestion configuration for the OTLP protocol.
          displayName: OTLP
          path: ingestion.otlp
        - description: GRPC defines the OTLP over gRPC configuration.
          displayName: gRPC
          path: ingestion.otlp.grpc
        - description: 'Enabled defines if OTLP over gRPC is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.grpc.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: TLS defines the TLS configuration for OTLP/gRPC ingestion.
          displayName: TLS
          path: ingestion.otlp.grpc.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.grpc.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.grpc.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.grpc.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.grpc.tls.minVersion
        - description: HTTP defines the OTLP over HTTP configuration.
          displayName: HTTP
          path: ingestion.otlp.http
        - description: 'Enabled defines if OTLP over HTTP is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.http.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: TLS defines the TLS configuration for OTLP/HTTP ingestion.
          displayName: TLS
          path: ingestion.otlp.http.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.http.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.http.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.http.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.http.tls.minVersion
        - description: JaegerUI defines the Jaeger UI configuration.
          displayName: Jaeger UI
          path: jaegerui
        - description: Enabled defines if the Jaeger UI component should be created.
          displayName: Enabled
          path: jaegerui.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines the Ingress configuration for the Jaeger UI.
          displayName: Ingress
          path: jaegerui.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: jaegerui.ingress.annotations
        - description: Enabled defines if an Ingress object should be created for
            Jaeger UI.
          displayName: Enabled
          path: jaegerui.ingress.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Host defines the hostname of the Ingress object.
          displayName: Hostname
          path: jaegerui.ingress.host
        - description: IngressClassName defines the name of an IngressClass cluster
            resource. Defines which ingress controller serves this ingress resource.
          displayName: Ingress Class Name
          path: jaegerui.ingress.ingressClassName
        - description: Resources defines the compute resource requirements of the
            Jaeger UI container.
          displayName: Resources
          path: jaegerui.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Route defines the OpenShift route configuration for the Jaeger
            UI.
          displayName: Route
          path: jaegerui.route
        - description: Annotations defines the annotations of the Route object.
          displayName: Annotations
          path: jaegerui.route.annotations
        - description: Enabled defines if a Route object should be created for Jaeger
            UI.
          displayName: Enabled
          path: jaegerui.route.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Host defines the hostname of the Route object.
          displayName: Hostname
          path: jaegerui.route.host
        - description: 'Termination specifies the termination type. Default: edge.'
          displayName: TLS Termination
          path: jaegerui.route.termination
        - description: 'ManagementState defines whether this instance is managed by
            the operator or self-managed. Default: Managed.'
          displayName: Management State
          path: management
        - description: Resources defines the compute resource requirements of the
            Tempo container.
          displayName: Resources
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Storage defines the storage configuration.
          displayName: Storage
          path: storage
        - description: Traces defines the storage configuration for traces.
          displayName: Traces
          path: storage.traces
        - description: Azure defines the configuration for Azure Storage.
          displayName: Azure Storage
          path: storage.traces.azure
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.azure.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: 'Backend defines the backend for storing traces. Default: memory.'
          displayName: Storage Backend
          path: storage.traces.backend
        - description: GCP defines the configuration for Google Cloud Storage.
          displayName: Google Cloud Storage
          path: storage.traces.gcs
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.gcs.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: S3 defines the configuration for Amazon S3.
          displayName: Amazon S3
          path: storage.traces.s3
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.s3.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TLS defines the TLS configuration for Amazon S3.
          displayName: TLS
          path: storage.traces.s3.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.traces.s3.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.traces.s3.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.traces.s3.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.traces.s3.tls.minVersion
        - description: 'Size defines the size of the volume where traces are stored.
            For in-memory storage, this defines the size of the tmpfs volume. For
            persistent volume storage, this defines the size of the persistent volume.
            For object storage, this defines the size of the persistent volume containing
            the Write-Ahead Log (WAL) of Tempo. Default: 10Gi.'
          displayName: Size
          path: storage.traces.size
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        version: v1alpha1
      - description: TempoStack manages a Tempo deployment in microservices mode.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - displayName: Extra Configurations
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: HashRing defines the spec for the distributed hash ring configuration.
          displayName: Hash Ring
          path: hashRing
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: MemberList configuration spec
          displayName: Memberlist Config
          path: hashRing.memberlist
        - description: EnableIPv6 enables IPv6 support for the memberlist based hash
            ring.
          displayName: Enable IPv6
          path: hashRing.memberlist.enableIPv6
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Grafana defines the Grafana configuration for operands.
          displayName: Grafana Config
          path: observability.grafana
        - description: CreateDatasource specifies if a Grafana Datasource should be
            created for Tempo.
          displayName: Create Datasource for Tempo
          path: observability.grafana.createDatasource
        - description: InstanceSelector specifies the Grafana instance where the datasource
            should be created.
          displayName: Create CreateDatasource for Tempo
          path: observability.grafana.instanceSelector
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: ReplicationFactor is used to define how many component replicas
            should exist.
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: 'NOTE: currently this field is not considered. Retention period
            defined by dataset. User can specify how long data should be stored.'
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.tls.minVersion
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: TLS defines TLS configuration for distributor receivers
          displayName: TLS
          path: template.distributor.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: template.distributor.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: template.distributor.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: template.distributor.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: template.distributor.tls.minVersion
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - displayName: Enabled
          path: template.gateway.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuery defines options specific to the Jaeger Query component.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Enabled defines if the Jaeger Query component should be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines the options for the Jaeger Query ingress.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: MonitorTab defines the monitor tab configuration.
          displayName: Jaeger Query UI Monitor Tab Settings
          path: template.queryFrontend.jaegerQuery.monitorTab
        - description: Enabled enables the monitor tab in the Jaeger console. The
            PrometheusEndpoint must be configured to enable this feature.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.monitorTab.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: PrometheusEndpoint defines the endpoint to the Prometheus instance
            that contains the span rate, error, and duration (RED) metrics. For instance
            on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
          displayName: Prometheus endpoint
          path: template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines the id of the tenant.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines the name of the tenant. The value of this
            field should be sent in X-Scope-OrgID header to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      `TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.
      Please ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - monitoring
    - tracing
    - observability
    - rhosdt
    - tempo
    - database
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:62c44057a27abd41cf3daf60b8736da59a82dadb65fa6c32bef65d19bd49ea49
  name: kube-rbac-proxy
- image: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:d126b79f54580e34d83733f518aa9edb67e93833f1becc7004a1d06428fb5304
  name: tempo_gateway_opa
- image: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:61316cf6c86b4912089d03f2f70b643463b356905346597d4776ba3534881f28
  name: tempo_gateway
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:153aea091df302b13f4c59ed8810ed6b9ecb850f43cf94d970ce24e6a1335499
  name: ""
- image: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:76107f4b503446ddeadd68ccc8c4d75893d768cf347f8fea468ed9d3275d7c3c
  name: tempo_query
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:77e4a81f5573f6fe5de65c70cd84598a3bfe0263efde84274ae3464481a2cc28
  name: tempo-rhel8-operator-77e4a81f5573f6fe5de65c70cd84598a3bfe0263efde84274ae3464481a2cc28-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:77e4a81f5573f6fe5de65c70cd84598a3bfe0263efde84274ae3464481a2cc28
  name: manager
- image: registry.redhat.io/rhosdt/tempo-rhel8@sha256:86e0f99dfd487a18f68f2b28be53b6acb496239674c10738c5bdf6e5266d3074
  name: tempo
schema: olm.bundle
---
image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:c6c6a80101bb29b78299f2678d15822cf8d8eec300ca55c27549f1dbb1c83d9f
name: tempo-operator.v0.8.0-3
package: tempo-product
properties:
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoMonolithic
    version: v1alpha1
- type: olm.gvk
  value:
    group: tempo.grafana.com
    kind: TempoStack
    version: v1alpha1
- type: olm.package
  value:
    packageName: tempo-product
    version: 0.8.0-3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoMonolithic",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "jaegerui": {
                "enabled": true,
                "resources": {
                  "limits": {
                    "cpu": "2",
                    "memory": "2Gi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                }
              },
              "storage": {
                "traces": {
                  "backend": "memory"
                }
              }
            }
          },
          {
            "apiVersion": "tempo.grafana.com/v1alpha1",
            "kind": "TempoStack",
            "metadata": {
              "name": "sample"
            },
            "spec": {
              "resources": {
                "total": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2Gi"
                  }
                }
              },
              "storage": {
                "secret": {
                  "name": "my-storage-secret",
                  "type": "s3"
                }
              },
              "storageSize": "1Gi",
              "template": {
                "queryFrontend": {
                  "jaegerQuery": {
                    "enabled": true,
                    "ingress": {
                      "type": "route"
                    }
                  }
                }
              }
            }
          }
        ]
      capabilities: Deep Insights
      categories: Logging & Tracing,Monitoring
      containerImage: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:be090291a18e10d4ae3af66ac029d0db779bcf2d100c13e41f7ed48981ca81cb
      createdAt: "2024-03-07 11:40:11.632301"
      description: Create and manage deployments of Tempo, a high-scale distributed
        tracing backend.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "true"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-tempo-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      repository: https://github.com/grafana/tempo-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        displayName: TempoMonolithic
        kind: TempoMonolithic
        name: tempomonolithics.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - description: ExtraConfig defines any extra (overlay) configuration of components.
          displayName: Extra Configuration
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: Ingestion defines the trace ingestion configuration.
          displayName: Ingestion
          path: ingestion
        - description: OTLP defines the ingestion configuration for the OTLP protocol.
          displayName: OTLP
          path: ingestion.otlp
        - description: GRPC defines the OTLP over gRPC configuration.
          displayName: gRPC
          path: ingestion.otlp.grpc
        - description: 'Enabled defines if OTLP over gRPC is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.grpc.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: TLS defines the TLS configuration for OTLP/gRPC ingestion.
          displayName: TLS
          path: ingestion.otlp.grpc.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.grpc.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.grpc.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.grpc.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.grpc.tls.minVersion
        - description: HTTP defines the OTLP over HTTP configuration.
          displayName: HTTP
          path: ingestion.otlp.http
        - description: 'Enabled defines if OTLP over HTTP is enabled. Default: enabled.'
          displayName: Enabled
          path: ingestion.otlp.http.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: TLS defines the TLS configuration for OTLP/HTTP ingestion.
          displayName: TLS
          path: ingestion.otlp.http.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: ingestion.otlp.http.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: ingestion.otlp.http.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: ingestion.otlp.http.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: ingestion.otlp.http.tls.minVersion
        - description: JaegerUI defines the Jaeger UI configuration.
          displayName: Jaeger UI
          path: jaegerui
        - description: Enabled defines if the Jaeger UI component should be created.
          displayName: Enabled
          path: jaegerui.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines the Ingress configuration for the Jaeger UI.
          displayName: Ingress
          path: jaegerui.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: jaegerui.ingress.annotations
        - description: Enabled defines if an Ingress object should be created for
            Jaeger UI.
          displayName: Enabled
          path: jaegerui.ingress.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Host defines the hostname of the Ingress object.
          displayName: Hostname
          path: jaegerui.ingress.host
        - description: IngressClassName defines the name of an IngressClass cluster
            resource. Defines which ingress controller serves this ingress resource.
          displayName: Ingress Class Name
          path: jaegerui.ingress.ingressClassName
        - description: Resources defines the compute resource requirements of the
            Jaeger UI container.
          displayName: Resources
          path: jaegerui.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Route defines the OpenShift route configuration for the Jaeger
            UI.
          displayName: Route
          path: jaegerui.route
        - description: Annotations defines the annotations of the Route object.
          displayName: Annotations
          path: jaegerui.route.annotations
        - description: Enabled defines if a Route object should be created for Jaeger
            UI.
          displayName: Enabled
          path: jaegerui.route.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Host defines the hostname of the Route object.
          displayName: Hostname
          path: jaegerui.route.host
        - description: 'Termination specifies the termination type. Default: edge.'
          displayName: TLS Termination
          path: jaegerui.route.termination
        - description: 'ManagementState defines whether this instance is managed by
            the operator or self-managed. Default: Managed.'
          displayName: Management State
          path: management
        - description: Resources defines the compute resource requirements of the
            Tempo container.
          displayName: Resources
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: Storage defines the storage configuration.
          displayName: Storage
          path: storage
        - description: Traces defines the storage configuration for traces.
          displayName: Traces
          path: storage.traces
        - description: Azure defines the configuration for Azure Storage.
          displayName: Azure Storage
          path: storage.traces.azure
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.azure.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: 'Backend defines the backend for storing traces. Default: memory.'
          displayName: Storage Backend
          path: storage.traces.backend
        - description: GCP defines the configuration for Google Cloud Storage.
          displayName: Google Cloud Storage
          path: storage.traces.gcs
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.gcs.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: S3 defines the configuration for Amazon S3.
          displayName: Amazon S3
          path: storage.traces.s3
        - description: Secret is the name of a Secret containing credentials for accessing
            object storage. It needs to be in the same namespace as the TempoMonolithic
            custom resource.
          displayName: Storage Secret
          path: storage.traces.s3.secret
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TLS defines the TLS configuration for Amazon S3.
          displayName: TLS
          path: storage.traces.s3.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.traces.s3.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.traces.s3.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.traces.s3.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.traces.s3.tls.minVersion
        - description: 'Size defines the size of the volume where traces are stored.
            For in-memory storage, this defines the size of the tmpfs volume. For
            persistent volume storage, this defines the size of the persistent volume.
            For object storage, this defines the size of the persistent volume containing
            the Write-Ahead Log (WAL) of Tempo. Default: 10Gi.'
          displayName: Size
          path: storage.traces.size
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        version: v1alpha1
      - description: TempoStack manages a Tempo deployment in microservices mode.
        displayName: TempoStack
        kind: TempoStack
        name: tempostacks.tempo.grafana.com
        resources:
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceAccount
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        specDescriptors:
        - displayName: Extra Configurations
          path: extraConfig
        - description: Tempo defines any extra Tempo configuration, which will be
            merged with the operator's generated Tempo configuration
          displayName: Tempo Extra Configurations
          path: extraConfig.tempo
        - description: HashRing defines the spec for the distributed hash ring configuration.
          displayName: Hash Ring
          path: hashRing
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:advanced
        - description: MemberList configuration spec
          displayName: Memberlist Config
          path: hashRing.memberlist
        - description: EnableIPv6 enables IPv6 support for the memberlist based hash
            ring.
          displayName: Enable IPv6
          path: hashRing.memberlist.enableIPv6
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Images defines the image for each container.
          displayName: Container Images
          path: images
        - description: LimitSpec is used to limit ingestion and querying rates.
          displayName: Ingestion and Querying Ratelimiting
          path: limits
        - description: Global is used to define global rate limits.
          displayName: Global Limit
          path: limits.global
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.global.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.global.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.global.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.global.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.global.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.global.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.global.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.global.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.global.query.maxSearchDuration
        - description: PerTenant is used to define rate limits per tenant.
          displayName: Tenant Limits
          path: limits.perTenant
        - description: Ingestion is used to define ingestion rate limits.
          displayName: Ingestion Limit
          path: limits.perTenant.ingestion
        - description: IngestionBurstSizeBytes defines the burst size (bytes) used
            in ingestion.
          displayName: Ingestion Burst Size in Bytes
          path: limits.perTenant.ingestion.ingestionBurstSizeBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: IngestionRateLimitBytes defines the Per-user ingestion rate
            limit (bytes) used in ingestion.
          displayName: Ingestion Rate Limit in Bytes
          path: limits.perTenant.ingestion.ingestionRateLimitBytes
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxBytesPerTrace defines the maximum number of bytes of an
            acceptable trace.
          displayName: Max Bytes per Trace
          path: limits.perTenant.ingestion.maxBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxTracesPerUser defines the maximum number of traces a user
            can send.
          displayName: Max Traces per User
          path: limits.perTenant.ingestion.maxTracesPerUser
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Query is used to define query rate limits.
          displayName: Query Limit
          path: limits.perTenant.query
        - description: MaxBytesPerTagValues defines the maximum size in bytes of a
            tag-values query.
          displayName: Max Tags per User
          path: limits.perTenant.query.maxBytesPerTagValues
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: 'DEPRECATED. MaxSearchBytesPerTrace defines the maximum size
            of search data for a single trace in bytes. default: `0` to disable.'
          displayName: Max Traces per User
          path: limits.perTenant.query.maxSearchBytesPerTrace
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: MaxSearchDuration defines the maximum allowed time range for
            a search. If this value is not set, then spec.search.maxDuration is used.
          displayName: Max Search Duration per User
          path: limits.perTenant.query.maxSearchDuration
        - description: ManagementState defines if the CR should be managed by the
            operator or not. Default is managed.
          displayName: Management State
          path: managementState
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:Managed
          - urn:alm:descriptor:com.tectonic.ui:select:Unmanaged
        - description: ObservabilitySpec defines how telemetry data gets handled.
          displayName: Observability
          path: observability
        - description: Grafana defines the Grafana configuration for operands.
          displayName: Grafana Config
          path: observability.grafana
        - description: CreateDatasource specifies if a Grafana Datasource should be
            created for Tempo.
          displayName: Create Datasource for Tempo
          path: observability.grafana.createDatasource
        - description: InstanceSelector specifies the Grafana instance where the datasource
            should be created.
          displayName: Create CreateDatasource for Tempo
          path: observability.grafana.instanceSelector
        - description: Metrics defines the metrics configuration for operands.
          displayName: Metrics Config
          path: observability.metrics
        - description: CreatePrometheusRules specifies if Prometheus rules for alerts
            should be created for Tempo components.
          displayName: Create PrometheusRules for Tempo components
          path: observability.metrics.createPrometheusRules
        - description: CreateServiceMonitors specifies if ServiceMonitors should be
            created for Tempo components.
          displayName: Create ServiceMonitors for Tempo components
          path: observability.metrics.createServiceMonitors
        - description: Tracing defines a config for operands.
          displayName: Tracing Config
          path: observability.tracing
        - description: JaegerAgentEndpoint defines the jaeger endpoint data gets send
            to.
          displayName: Jaeger-Agent-Endpoint
          path: observability.tracing.jaeger_agent_endpoint
        - description: SamplingFraction defines the sampling ratio. Valid values are
            0 to 1.
          displayName: Sampling Fraction
          path: observability.tracing.sampling_fraction
        - description: ReplicationFactor is used to define how many component replicas
            should exist.
          displayName: Replication Factor
          path: replicationFactor
        - description: Resources defines resources configuration.
          displayName: Resources
          path: resources
        - description: The total amount of resources for Tempo instance. The operator
            autonomously splits resources between deployed Tempo components. Only
            limits are supported, the operator calculates requests automatically.
            See http://github.com/grafana/tempo/issues/1540.
          displayName: Resource Requirements
          path: resources.total
        - description: 'NOTE: currently this field is not considered. Retention period
            defined by dataset. User can specify how long data should be stored.'
          displayName: Retention Period
          path: retention
        - description: Global is used to configure global retention.
          displayName: Global Retention
          path: retention.global
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.global.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: PerTenant is used to configure retention per tenant.
          displayName: PerTenant Retention
          path: retention.perTenant
        - description: 'Traces defines retention period. Supported parameter suffixes
            are "s", "m" and "h". example: 336h default: value is 48h.'
          displayName: Trace Retention Period
          path: retention.perTenant.traces
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: SearchSpec control the configuration for the search capabilities.
          displayName: Search configuration options
          path: search
        - description: 'Limit used for search requests if none is set by the caller
            (default: 20)'
          displayName: Limit used for search requests if none is set by the caller,
            this limit the number of traces returned by the query
          path: search.defaultResultLimit
        - description: 'The maximum allowed time range for a search, default: 0s which
            means unlimited.'
          displayName: Max search time range allowed
          path: search.maxDuration
        - description: The maximum allowed value of the limit parameter on search
            requests. If the search request limit parameter exceeds the value configured
            here it will be set to the value configured here. The default value of
            0 disables this limit.
          displayName: The maximum allowed value of the limit parameter on search
            requests, this determine the max number of traces allowed to be returned
          path: search.maxResultLimit
        - description: ServiceAccount defines the service account to use for all tempo
            components.
          displayName: Service Account
          path: serviceAccount
        - description: Storage defines the spec for the object storage endpoint to
            store traces. User is required to create secret and supply it.
          displayName: Object Storage
          path: storage
        - description: Secret for object storage authentication. Name of a secret
            in the same namespace as the TempoStack custom resource.
          displayName: Object Storage Secret
          path: storage.secret
        - description: Name of a secret in the namespace configured for object storage
            secrets.
          displayName: Object Storage Secret Name
          path: storage.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Type of object storage that should be used
          displayName: Object Storage Secret Type
          path: storage.secret.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:azure
          - urn:alm:descriptor:com.tectonic.ui:select:gcs
          - urn:alm:descriptor:com.tectonic.ui:select:s3
        - description: TLS configuration for reaching the object storage endpoint.
          displayName: TLS Config
          path: storage.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: storage.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: storage.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: storage.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: storage.tls.minVersion
        - description: StorageClassName for PVCs used by ingester. Defaults to nil
            (default storage class in the cluster).
          displayName: StorageClassName for PVCs
          path: storageClassName
        - description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
          displayName: Storage size for PVCs
          path: storageSize
        - description: Template defines requirements for a set of tempo components.
          displayName: Tempo Component Templates
          path: template
        - description: Compactor defines the tempo compactor component spec.
          displayName: Compactor pods
          path: template.compactor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.compactor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.compactor.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.compactor.tolerations
        - description: Distributor defines the distributor component spec.
          displayName: Distributor pods
          path: template.distributor
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.distributor.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.distributor.replicas
        - description: TLS defines TLS configuration for distributor receivers
          displayName: TLS
          path: template.distributor.tls
        - description: CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
            It needs to be in the same namespace as the Tempo custom resource.
          displayName: CA ConfigMap
          path: template.distributor.tls.caName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:ConfigMap
        - description: Cert is the name of a Secret containing a certificate (tls.crt)
            and private key (tls.key). It needs to be in the same namespace as the
            Tempo custom resource.
          displayName: Certificate Secret
          path: template.distributor.tls.certName
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: Enabled defines if TLS is enabled.
          displayName: Enabled
          path: template.distributor.tls.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: MinVersion defines the minimum acceptable TLS version.
          displayName: Min TLS Version
          path: template.distributor.tls.minVersion
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.distributor.tolerations
        - description: Gateway defines the tempo gateway spec.
          displayName: Gateway pods
          path: template.gateway
        - displayName: Enabled
          path: template.gateway.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines gateway Ingress options.
          displayName: Jaeger gateway Ingress Settings
          path: template.gateway.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.gateway.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.gateway.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.gateway.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.gateway.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.gateway.ingress.type
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.gateway.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.gateway.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.gateway.tolerations
        - description: Ingester defines the ingester component spec.
          displayName: Ingester pods
          path: template.ingester
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.ingester.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.ingester.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.ingester.tolerations
        - description: Querier defines the querier component spec.
          displayName: Querier pods
          path: template.querier
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.querier.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.querier.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.querier.tolerations
        - description: TempoQueryFrontendSpec defines the query frontend spec.
          displayName: Query Frontend pods
          path: template.queryFrontend
        - description: JaegerQuery defines options specific to the Jaeger Query component.
          displayName: Jaeger Query Settings
          path: template.queryFrontend.jaegerQuery
        - description: Enabled defines if the Jaeger Query component should be created.
          displayName: Enable Jaeger Query UI
          path: template.queryFrontend.jaegerQuery.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: Ingress defines the options for the Jaeger Query ingress.
          displayName: Jaeger Query UI Ingress Settings
          path: template.queryFrontend.jaegerQuery.ingress
        - description: Annotations defines the annotations of the Ingress object.
          displayName: Annotations
          path: template.queryFrontend.jaegerQuery.ingress.annotations
        - description: Host defines the hostname of the Ingress object.
          displayName: Host
          path: template.queryFrontend.jaegerQuery.ingress.host
        - description: Route defines the options for the OpenShift route.
          displayName: Route Configuration
          path: template.queryFrontend.jaegerQuery.ingress.route
        - description: Termination defines the termination type. The default is "edge".
          displayName: TLS Termination Policy
          path: template.queryFrontend.jaegerQuery.ingress.route.termination
        - description: Type defines the type of Ingress for the Jaeger Query UI. Currently
            ingress, route and none are supported.
          displayName: Type
          path: template.queryFrontend.jaegerQuery.ingress.type
        - description: MonitorTab defines the monitor tab configuration.
          displayName: Jaeger Query UI Monitor Tab Settings
          path: template.queryFrontend.jaegerQuery.monitorTab
        - description: Enabled enables the monitor tab in the Jaeger console. The
            PrometheusEndpoint must be configured to enable this feature.
          displayName: Enabled
          path: template.queryFrontend.jaegerQuery.monitorTab.enabled
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - description: PrometheusEndpoint defines the endpoint to the Prometheus instance
            that contains the span rate, error, and duration (RED) metrics. For instance
            on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
          displayName: Prometheus endpoint
          path: template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint
        - description: NodeSelector defines the simple form of the node-selection
            constraint.
          displayName: Node Selector
          path: template.queryFrontend.nodeSelector
        - description: Replicas defines the number of replicas to be created for this
            component.
          displayName: Component Replicas
          path: template.queryFrontend.replicas
        - description: Tolerations defines component-specific pod tolerations.
          displayName: Tolerations
          path: template.queryFrontend.tolerations
        - description: Tenants defines the per-tenant authentication and authorization
            spec.
          displayName: Tenants Configuration
          path: tenants
        - description: Authentication defines the tempo-gateway component authentication
            configuration spec per tenant.
          displayName: Authentication
          path: tenants.authentication
        - description: OIDC defines the spec for the OIDC tenant's authentication.
          displayName: OIDC Configuration
          path: tenants.authentication[0].oidc
        - description: IssuerURL defines the URL for issuer.
          displayName: Issuer URL
          path: tenants.authentication[0].oidc.issuerURL
        - description: RedirectURL defines the URL for redirect.
          displayName: Redirect URL
          path: tenants.authentication[0].oidc.redirectURL
        - description: Secret defines the spec for the clientID, clientSecret and
            issuerCAPath for tenant's authentication.
          displayName: Tenant Secret
          path: tenants.authentication[0].oidc.secret
        - description: Name of a secret in the namespace configured for tenant secrets.
          displayName: Tenant Secret Name
          path: tenants.authentication[0].oidc.secret.name
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes:Secret
        - description: TenantID defines the id of the tenant.
          displayName: Tenant ID
          path: tenants.authentication[0].tenantId
        - description: TenantName defines the name of the tenant. The value of this
            field should be sent in X-Scope-OrgID header to identify the tenant.
          displayName: Tenant Name
          path: tenants.authentication[0].tenantName
        - description: Authorization defines the tempo-gateway component authorization
            configuration spec per tenant.
          displayName: Authorization
          path: tenants.authorization
        - description: RoleBindings defines configuration to bind a set of roles to
            a set of subjects.
          displayName: Static Role Bindings
          path: tenants.authorization.roleBindings
        - description: Roles defines a set of permissions to interact with a tenant.
          displayName: Static Roles
          path: tenants.authorization.roles
        - description: Mode defines the multitenancy mode.
          displayName: Mode
          path: tenants.mode
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:static
          - urn:alm:descriptor:com.tectonic.ui:select:openshift
        statusDescriptors:
        - description: Distributor is a map to the per pod status of the distributor
            deployment
          displayName: Distributor
          path: components.distributor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Ingester is a map to the per pod status of the ingester statefulset
          displayName: Ingester
          path: components.ingester
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Querier is a map to the per pod status of the querier deployment
          displayName: Querier
          path: components.querier
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Gateway is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.gateway
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: QueryFrontend is a map to the per pod status of the query frontend
            deployment
          displayName: Query Frontend
          path: components.queryFrontend
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Compactor is a map to the pod status of the compactor pod.
          displayName: Compactor
          path: components.compactor
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podStatuses
        - description: Conditions of the Tempo deployment health.
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |-
      Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.
      It can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.

      The Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).

      ### Core capabilities
      Tempo is used for monitoring and troubleshooting microservices-based distributed systems, including:
      * Distributed transaction monitoring
      * Root cause analysis
      * Performance / latency optimization

      ### Operator features
      * **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component
      * **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)
      * **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters
      * **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster
      * **mTLS** - Communication between the Tempo components can be secured via mTLS
      * **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route
      * **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`

      ### Before you start
      `TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.
      Please ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.

      ### Examples
      There is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).

      ### Support & Troubleshooting
      Tempo Operator is available and supported as part of a Red Hat OpenShift subscription.
    displayName: Tempo Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - database
    - tempo
    - tracing
    - monitoring
    - rhosdt
    - observability
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Tempo Operator
      url: https://github.com/grafana/tempo-operator
    maintainers:
    - email: jaeger-prod@redhat.com
      name: Distributed tracing team
    maturity: alpha
    provider:
      name: Red Hat
relatedImages:
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dceccbe9fc4bc9c482add48a0ac7f445dadf548cce2e2ff2d1764fc31a6cfa41
  name: kube-rbac-proxy
- image: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:cfdb963e8a1789490119aa41523416f88af4038138f280218d1b0723bae835ca
  name: tempo_gateway_opa
- image: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:c89066066a6aa4f21f0da4cb6d1fa8b6b30f76c3084003be7826b24bd6e74b0c
  name: tempo_gateway
- image: registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:c6c6a80101bb29b78299f2678d15822cf8d8eec300ca55c27549f1dbb1c83d9f
  name: ""
- image: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:e7b1cbc8aea2973a461cde9dafe2ebec14d1b77cbcf2027e1dd59227034159de
  name: tempo_query
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:be090291a18e10d4ae3af66ac029d0db779bcf2d100c13e41f7ed48981ca81cb
  name: tempo-rhel8-operator-be090291a18e10d4ae3af66ac029d0db779bcf2d100c13e41f7ed48981ca81cb-annotation
- image: registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:be090291a18e10d4ae3af66ac029d0db779bcf2d100c13e41f7ed48981ca81cb
  name: manager
- image: registry.redhat.io/rhosdt/tempo-rhel8@sha256:620b7d6fc0f32f82b91fadaedeefaac870ffb6524e1100c7824005c2cc5f52b4
  name: tempo
schema: olm.bundle
